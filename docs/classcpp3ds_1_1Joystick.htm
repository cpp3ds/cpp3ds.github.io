<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1Joystick.htm">Joystick</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1Joystick-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::Joystick Class Reference<div class="ingroups"><a class="el" href="group__window.htm">Window module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Give access to the real-time state of the joysticks.  
 <a href="classcpp3ds_1_1Joystick.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Joystick_8hpp_source.htm">Joystick.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcpp3ds_1_1Joystick_1_1Identification.htm">Identification</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure holding a joystick's identification.  <a href="structcpp3ds_1_1Joystick_1_1Identification.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a31d07fee61f8e0fc02bd893750a12813"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813a3b629d430cb383cad3f03b14c8260704">Count</a> = 8, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813ab263bcfdff6198c65a6889ce5ab4375c">ButtonCount</a> = 32, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813a51bfcbe0675d693e16dd4f11927f5ceb">AxisCount</a> = 8
<br />
 }<tr class="memdesc:a31d07fee61f8e0fc02bd893750a12813"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constants related to joysticks capabilities.  <a href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813">More...</a><br /></td></tr>
<tr class="separator:a31d07fee61f8e0fc02bd893750a12813"><td class="memSeparator" colspan="2">&#160;</td></tr>
</td></tr>
<tr class="memitem:a8ca3be12cb5d2fcea337c7763c5bcf11"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">Axis</a> { <br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a58a39a199c58ccd1b51dfec96bb90a78">X</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a90e210dbef77056b038c8f4de7ebcb74">Y</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a0b4302b6acea1fe7056c0233504d48b0">Z</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a4cc2afc0c154dbb49668b294cc6f5b66">R</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11acfdf4feddc060beeb6f94ff03208a6fc">U</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a90099a74b73a566212498ae9c00e9f3e">V</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a7f8054c0d3a80f80099b2118b499f779">PovX</a>, 
<br />
&#160;&#160;<a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a5be760020609057a80778a4b9e40c769">PovY</a>
<br />
 }<tr class="memdesc:a8ca3be12cb5d2fcea337c7763c5bcf11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Axes supported by SFML joysticks.  <a href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">More...</a><br /></td></tr>
<tr class="separator:a8ca3be12cb5d2fcea337c7763c5bcf11"><td class="memSeparator" colspan="2">&#160;</td></tr>
</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:abcf99845d181fb1916ca24e73a8e1408"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#abcf99845d181fb1916ca24e73a8e1408">isConnected</a> (unsigned int joystick)</td></tr>
<tr class="memdesc:abcf99845d181fb1916ca24e73a8e1408"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a joystick is connected.  <a href="#abcf99845d181fb1916ca24e73a8e1408">More...</a><br /></td></tr>
<tr class="separator:abcf99845d181fb1916ca24e73a8e1408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a251faea656b4b59372c8403dbfa3062d"><td class="memItemLeft" align="right" valign="top">static unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#a251faea656b4b59372c8403dbfa3062d">getButtonCount</a> (unsigned int joystick)</td></tr>
<tr class="memdesc:a251faea656b4b59372c8403dbfa3062d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of buttons supported by a joystick.  <a href="#a251faea656b4b59372c8403dbfa3062d">More...</a><br /></td></tr>
<tr class="separator:a251faea656b4b59372c8403dbfa3062d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ae4b50035c5b5038b077cdaa06648ff"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#a3ae4b50035c5b5038b077cdaa06648ff">hasAxis</a> (unsigned int joystick, <a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">Axis</a> axis)</td></tr>
<tr class="memdesc:a3ae4b50035c5b5038b077cdaa06648ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a joystick supports a given axis.  <a href="#a3ae4b50035c5b5038b077cdaa06648ff">More...</a><br /></td></tr>
<tr class="separator:a3ae4b50035c5b5038b077cdaa06648ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a059f10b58fdce17e06e4e23d245a1670"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#a059f10b58fdce17e06e4e23d245a1670">isButtonPressed</a> (unsigned int joystick, unsigned int button)</td></tr>
<tr class="memdesc:a059f10b58fdce17e06e4e23d245a1670"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a joystick button is pressed.  <a href="#a059f10b58fdce17e06e4e23d245a1670">More...</a><br /></td></tr>
<tr class="separator:a059f10b58fdce17e06e4e23d245a1670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac3d746957c2400af1a9624991bde3ee"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#aac3d746957c2400af1a9624991bde3ee">getAxisPosition</a> (unsigned int joystick, <a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">Axis</a> axis)</td></tr>
<tr class="memdesc:aac3d746957c2400af1a9624991bde3ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current position of a joystick axis.  <a href="#aac3d746957c2400af1a9624991bde3ee">More...</a><br /></td></tr>
<tr class="separator:aac3d746957c2400af1a9624991bde3ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac15f2c73ef75ad529a6d3af24eaebd2d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structcpp3ds_1_1Joystick_1_1Identification.htm">Identification</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#ac15f2c73ef75ad529a6d3af24eaebd2d">getIdentification</a> (unsigned int joystick)</td></tr>
<tr class="memdesc:ac15f2c73ef75ad529a6d3af24eaebd2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the joystick information.  <a href="#ac15f2c73ef75ad529a6d3af24eaebd2d">More...</a><br /></td></tr>
<tr class="separator:ac15f2c73ef75ad529a6d3af24eaebd2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f56eb32354dd39d7e828ddcdb99282"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Joystick.htm#aa2f56eb32354dd39d7e828ddcdb99282">update</a> ()</td></tr>
<tr class="memdesc:aa2f56eb32354dd39d7e828ddcdb99282"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the states of all joysticks.  <a href="#aa2f56eb32354dd39d7e828ddcdb99282">More...</a><br /></td></tr>
<tr class="separator:aa2f56eb32354dd39d7e828ddcdb99282"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Give access to the real-time state of the joysticks. </p>
<p><a class="el" href="classcpp3ds_1_1Joystick.htm" title="Give access to the real-time state of the joysticks. ">cpp3ds::Joystick</a> provides an interface to the state of the joysticks.</p>
<p>It only contains static functions, so it's not meant to be instantiated. Instead, each joystick is identified by an index that is passed to the functions of this class.</p>
<p>This class allows users to query the state of joysticks at any time and directly, without having to deal with a window and its events. Compared to the JoystickMoved, JoystickButtonPressed and JoystickButtonReleased events, <a class="el" href="classcpp3ds_1_1Joystick.htm" title="Give access to the real-time state of the joysticks. ">cpp3ds::Joystick</a> can retrieve the state of axes and buttons of joysticks at any time (you don't need to store and update a boolean on your side in order to know if a button is pressed or released), and you always get the real state of joysticks, even if they are moved, pressed or released when your window is out of focus and no event is triggered.</p>
<p>SFML supports: </p><ul>
<li>8 joysticks (<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813a3b629d430cb383cad3f03b14c8260704" title="Maximum number of supported joysticks. ">cpp3ds::Joystick::Count</a>) </li>
<li>32 buttons per joystick (<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813ab263bcfdff6198c65a6889ce5ab4375c" title="Maximum number of supported buttons. ">cpp3ds::Joystick::ButtonCount</a>) </li>
<li>8 axes per joystick (<a class="el" href="classcpp3ds_1_1Joystick.htm#a31d07fee61f8e0fc02bd893750a12813a51bfcbe0675d693e16dd4f11927f5ceb" title="Maximum number of supported axes. ">cpp3ds::Joystick::AxisCount</a>)</li>
</ul>
<p>Unlike the keyboard or mouse, the state of joysticks is sometimes not directly available (depending on the OS), therefore an <a class="el" href="classcpp3ds_1_1Joystick.htm#aa2f56eb32354dd39d7e828ddcdb99282" title="Update the states of all joysticks. ">update()</a> function must be called in order to update the current state of joysticks. When you have a window with event handling, this is done automatically, you don't need to call anything. But if you have no window, or if you want to check joysticks state before creating one, you must call <a class="el" href="classcpp3ds_1_1Joystick.htm#aa2f56eb32354dd39d7e828ddcdb99282" title="Update the states of all joysticks. ">cpp3ds::Joystick::update</a> explicitely.</p>
<p>Usage example: </p><div class="fragment"><div class="line"><span class="comment">// Is joystick #0 connected?</span></div>
<div class="line"><span class="keywordtype">bool</span> connected = <a class="code" href="classcpp3ds_1_1Joystick.htm#abcf99845d181fb1916ca24e73a8e1408">cpp3ds::Joystick::isConnected</a>(0);</div>
<div class="line"></div>
<div class="line"><span class="comment">// How many buttons does joystick #0 support?</span></div>
<div class="line"><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> buttons = <a class="code" href="classcpp3ds_1_1Joystick.htm#a251faea656b4b59372c8403dbfa3062d">cpp3ds::Joystick::getButtonCount</a>(0);</div>
<div class="line"></div>
<div class="line"><span class="comment">// Does joystick #0 define a X axis?</span></div>
<div class="line"><span class="keywordtype">bool</span> hasX = <a class="code" href="classcpp3ds_1_1Joystick.htm#a3ae4b50035c5b5038b077cdaa06648ff">cpp3ds::Joystick::hasAxis</a>(0, <a class="code" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a58a39a199c58ccd1b51dfec96bb90a78">cpp3ds::Joystick::X</a>);</div>
<div class="line"></div>
<div class="line"><span class="comment">// Is button #2 pressed on joystick #0?</span></div>
<div class="line"><span class="keywordtype">bool</span> pressed = <a class="code" href="classcpp3ds_1_1Joystick.htm#a059f10b58fdce17e06e4e23d245a1670">cpp3ds::Joystick::isButtonPressed</a>(0, 2);</div>
<div class="line"></div>
<div class="line"><span class="comment">// What&#39;s the current position of the Y axis on joystick #0?</span></div>
<div class="line"><span class="keywordtype">float</span> position = <a class="code" href="classcpp3ds_1_1Joystick.htm#aac3d746957c2400af1a9624991bde3ee">cpp3ds::Joystick::getAxisPosition</a>(0, <a class="code" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11a90e210dbef77056b038c8f4de7ebcb74">cpp3ds::Joystick::Y</a>);</div>
</div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1Keyboard.htm" title="Give access to the real-time state of the keyboard. ">cpp3ds::Keyboard</a>, <a class="el" href="classcpp3ds_1_1Touch.htm" title="Give access to the real-time state of the touches. ">cpp3ds::Touch</a> </dd></dl>

<p>Definition at line <a class="el" href="Joystick_8hpp_source.htm#l00011">11</a> of file <a class="el" href="Joystick_8hpp_source.htm">Joystick.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a31d07fee61f8e0fc02bd893750a12813"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constants related to joysticks capabilities. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a31d07fee61f8e0fc02bd893750a12813a3b629d430cb383cad3f03b14c8260704"></a>Count&#160;</td><td class="fielddoc">
<p>Maximum number of supported joysticks. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a31d07fee61f8e0fc02bd893750a12813ab263bcfdff6198c65a6889ce5ab4375c"></a>ButtonCount&#160;</td><td class="fielddoc">
<p>Maximum number of supported buttons. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a31d07fee61f8e0fc02bd893750a12813a51bfcbe0675d693e16dd4f11927f5ceb"></a>AxisCount&#160;</td><td class="fielddoc">
<p>Maximum number of supported axes. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="Joystick_8hpp_source.htm#l00018">18</a> of file <a class="el" href="Joystick_8hpp_source.htm">Joystick.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">cpp3ds::Joystick::Axis</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Axes supported by SFML joysticks. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a58a39a199c58ccd1b51dfec96bb90a78"></a>X&#160;</td><td class="fielddoc">
<p>The X axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a90e210dbef77056b038c8f4de7ebcb74"></a>Y&#160;</td><td class="fielddoc">
<p>The Y axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a0b4302b6acea1fe7056c0233504d48b0"></a>Z&#160;</td><td class="fielddoc">
<p>The Z axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a4cc2afc0c154dbb49668b294cc6f5b66"></a>R&#160;</td><td class="fielddoc">
<p>The R axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11acfdf4feddc060beeb6f94ff03208a6fc"></a>U&#160;</td><td class="fielddoc">
<p>The U axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a90099a74b73a566212498ae9c00e9f3e"></a>V&#160;</td><td class="fielddoc">
<p>The V axis. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a7f8054c0d3a80f80099b2118b499f779"></a>PovX&#160;</td><td class="fielddoc">
<p>The X axis of the point-of-view hat. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a8ca3be12cb5d2fcea337c7763c5bcf11a5be760020609057a80778a4b9e40c769"></a>PovY&#160;</td><td class="fielddoc">
<p>The Y axis of the point-of-view hat. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="Joystick_8hpp_source.htm#l00028">28</a> of file <a class="el" href="Joystick_8hpp_source.htm">Joystick.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aac3d746957c2400af1a9624991bde3ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float cpp3ds::Joystick::getAxisPosition </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">Axis</a>&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current position of a joystick axis. </p>
<p>If the joystick is not connected, this function returns 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick </td></tr>
    <tr><td class="paramname">axis</td><td>Axis to check</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Current position of the axis, in range [-100 .. 100] </dd></dl>

</div>
</div>
<a class="anchor" id="a251faea656b4b59372c8403dbfa3062d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned int cpp3ds::Joystick::getButtonCount </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the number of buttons supported by a joystick. </p>
<p>If the joystick is not connected, this function returns 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Number of buttons supported by the joystick </dd></dl>

</div>
</div>
<a class="anchor" id="ac15f2c73ef75ad529a6d3af24eaebd2d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="structcpp3ds_1_1Joystick_1_1Identification.htm">Identification</a> cpp3ds::Joystick::getIdentification </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the joystick information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Structure containing joystick information. </dd></dl>

</div>
</div>
<a class="anchor" id="a3ae4b50035c5b5038b077cdaa06648ff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool cpp3ds::Joystick::hasAxis </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Joystick.htm#a8ca3be12cb5d2fcea337c7763c5bcf11">Axis</a>&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if a joystick supports a given axis. </p>
<p>If the joystick is not connected, this function returns false.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick </td></tr>
    <tr><td class="paramname">axis</td><td>Axis to check</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the joystick supports the axis, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a059f10b58fdce17e06e4e23d245a1670"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool cpp3ds::Joystick::isButtonPressed </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>button</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if a joystick button is pressed. </p>
<p>If the joystick is not connected, this function returns false.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick </td></tr>
    <tr><td class="paramname">button</td><td>Button to check</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the button is pressed, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="abcf99845d181fb1916ca24e73a8e1408"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool cpp3ds::Joystick::isConnected </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>joystick</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if a joystick is connected. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">joystick</td><td>Index of the joystick to check</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the joystick is connected, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="aa2f56eb32354dd39d7e828ddcdb99282"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cpp3ds::Joystick::update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the states of all joysticks. </p>
<p>This function is used internally by SFML, so you normally don't have to call it explicitely. However, you may need to call it if you have no window yet (or no window at all): in this case the joysticks states are not updated automatically. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Joystick_8hpp_source.htm">Joystick.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
