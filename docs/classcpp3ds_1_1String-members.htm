<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1String.htm">String</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cpp3ds::String Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ad68c2381784dac35347a6331d38faecc">begin</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a2240f3d3925c05858b41e193afb41bac">begin</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a38d2a70a40b4ba6dc71175179554a3ec">clear</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#adda981aca4af2ad88c029bdde8f8a2be">ConstIterator</a> typedef</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a6584439243eabfe53a9418a99b0fa385">end</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#aaaad4fec856630d591f7f6bf33840737">end</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a55bb0a42c42c16d4812a88bad7d5faba">erase</a>(std::size_t position, std::size_t count=1)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a478a73f566b6cf5a960c16648eff641f">find</a>(const String &amp;str, std::size_t start=0) const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a6d437cfe536c90a8b2dc3f3366e7b54b">fromUtf16</a>(T begin, T end)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a246a51e6e807820bba432560c1679261">fromUtf32</a>(T begin, T end)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a0124bcaf5e50b628c3a2455fb2977c88">fromUtf8</a>(T begin, T end)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a92a3d3605b95562ac554787656873b3d">getData</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a3e6c1bbba394612974a12e3d4477717b">getSize</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#af5f3abd8c010d7da5463b1368ad870e6">insert</a>(std::size_t position, const String &amp;str)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a5a81b7a64d2665c2f20050d59e8864bc">InvalidPos</a></td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ac067c212f638dbaa7ce838beee6286ef">isEmpty</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a97077442b6cb268ad78bc33fb5bf85a6">Iterator</a> typedef</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a3830705d5b07d2fb2ceb99935c0032c0">operator std::string</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#aec7aefe6d7d42f01732005121bdedc79">operator std::wstring</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a3bfb9217788a9978499b8d5696bb0ef2">operator!=</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#af140f992b7698cf1448677c2c8e11bf1">operator+</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#abb398c3ced8ac8bd85ca0fc80f62a007">operator+=</a>(const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;</b> (defined in <a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a5158a142e0966685ec7fb4e147b24ef0">operator&lt;</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ac1c1bb5dcf02aad3b2c0a1bf74a11cc9">operator&lt;=</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a29686ec7e5bdfa7597ddbf595e68f4ac">operator=</a>(const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator==</b> (defined in <a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a483931724196c580552b68751fb4d837">operator==</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ac96278a8cbe282632b11f0c8c007df0c">operator&gt;</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a112689eec28e0ca9489e8c4ec6a34493">operator&gt;=</a>(const String &amp;left, const String &amp;right)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"><span class="mlabel">related</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a231ed6419bf1c66e6466df6d57bfeb62">operator[]</a>(std::size_t index) const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a179a8bd904d5877c3d12f35cc6d7a1bb">operator[]</a>(std::size_t index)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a8f9e69e4829dd47377959de82798e65a">replace</a>(std::size_t position, std::size_t length, const String &amp;replaceWith)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#acc60acb36b146cf0c696b06f51a542c6">replace</a>(const String &amp;searchFor, const String &amp;replaceWith)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ab5045eda77656dc38c602edbc18adbba">String</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ace2a3794abea897947503b064cd8b216">String</a>(char ansiChar, const std::locale &amp;locale=std::locale())</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a22404f775e1d63bde8c0963d8b4d4a31">String</a>(wchar_t wideChar)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a2ab5201a3d431d69e88a980e522cc92d">String</a>(Uint32 utf32Char)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a2f48b15c3405658bdc2544a2250964ce">String</a>(const char *ansiString, const std::locale &amp;locale=std::locale())</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a6de4044e4dcc79d8d9414da072cf8f72">String</a>(const std::string &amp;ansiString, const std::locale &amp;locale=std::locale())</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ad60424267d86a5b0636620a90de9d40c">String</a>(const wchar_t *wideString)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a330892e7225cd6a432ea72e3e59bae0a">String</a>(const std::wstring &amp;wideString)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a6ad9c7a2d37b6092f0c1a6bc0b0b6c45">String</a>(const Uint32 *utf32String)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#ab61abe670968a90471c6609eb6d824e3">String</a>(const std::basic_string&lt; Uint32 &gt; &amp;utf32String)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#acb3e504744e0a7878cc1b9f3e82991e8">String</a>(const String &amp;copy)</td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#af7652aba9ae1dd06519f9587358eb4b6">substring</a>(std::size_t position, std::size_t length=InvalidPos) const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#aca186c7701bbcd06ee1cbec495a2aa8a">toAnsiString</a>(const std::locale &amp;locale=std::locale()) const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a1d379baf388f85c1c9de6a8a09c02f17">toUtf16</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#aa221fd261fd0a4d156601f8414848ecd">toUtf32</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#a33f7c1d17bee042e4ce83006cd31b77d">toUtf8</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm#abba6a1dd0ac8a205145e9de1253e8335">toWideString</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1String.htm">cpp3ds::String</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
