<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm">Utf&lt; 16 &gt;</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1Utf_3_0116_01_4-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::Utf&lt; 16 &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Specialization of the <a class="el" href="classcpp3ds_1_1Utf.htm" title="Utility class providing generic functions for UTF conversions. ">Utf</a> template for UTF-16.  
 <a href="classcpp3ds_1_1Utf_3_0116_01_4.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac13abc71fbf865d5b1afbc579d72f018"><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr class="memitem:ac13abc71fbf865d5b1afbc579d72f018"><td class="memTemplItemLeft" align="right" valign="top">static In&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#ac13abc71fbf865d5b1afbc579d72f018">decode</a> (In begin, In end, Uint32 &amp;output, Uint32 replacement=0)</td></tr>
<tr class="memdesc:ac13abc71fbf865d5b1afbc579d72f018"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a single UTF-16 character.  <a href="#ac13abc71fbf865d5b1afbc579d72f018">More...</a><br /></td></tr>
<tr class="separator:ac13abc71fbf865d5b1afbc579d72f018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a844b78ea8c05db2dc920e57b00de15fe"><td class="memTemplParams" colspan="2">template&lt;typename Out &gt; </td></tr>
<tr class="memitem:a844b78ea8c05db2dc920e57b00de15fe"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a844b78ea8c05db2dc920e57b00de15fe">encode</a> (Uint32 input, Out output, Uint16 replacement=0)</td></tr>
<tr class="memdesc:a844b78ea8c05db2dc920e57b00de15fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode a single UTF-16 character.  <a href="#a844b78ea8c05db2dc920e57b00de15fe">More...</a><br /></td></tr>
<tr class="separator:a844b78ea8c05db2dc920e57b00de15fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d63cb432548eee52b83d7089cf8681b"><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr class="memitem:a0d63cb432548eee52b83d7089cf8681b"><td class="memTemplItemLeft" align="right" valign="top">static In&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a0d63cb432548eee52b83d7089cf8681b">next</a> (In begin, In end)</td></tr>
<tr class="memdesc:a0d63cb432548eee52b83d7089cf8681b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advance to the next UTF-16 character.  <a href="#a0d63cb432548eee52b83d7089cf8681b">More...</a><br /></td></tr>
<tr class="separator:a0d63cb432548eee52b83d7089cf8681b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac08784066d1a352181250fb8b3b2badf"><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr class="memitem:ac08784066d1a352181250fb8b3b2badf"><td class="memTemplItemLeft" align="right" valign="top">static std::size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#ac08784066d1a352181250fb8b3b2badf">count</a> (In begin, In end)</td></tr>
<tr class="memdesc:ac08784066d1a352181250fb8b3b2badf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Count the number of characters of a UTF-16 sequence.  <a href="#ac08784066d1a352181250fb8b3b2badf">More...</a><br /></td></tr>
<tr class="separator:ac08784066d1a352181250fb8b3b2badf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ad874b56b0d02a3e35ac1ddd26f3048"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a0ad874b56b0d02a3e35ac1ddd26f3048"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a0ad874b56b0d02a3e35ac1ddd26f3048">fromAnsi</a> (In begin, In end, Out output, const std::locale &amp;locale=std::locale())</td></tr>
<tr class="memdesc:a0ad874b56b0d02a3e35ac1ddd26f3048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an ANSI characters range to UTF-16.  <a href="#a0ad874b56b0d02a3e35ac1ddd26f3048">More...</a><br /></td></tr>
<tr class="separator:a0ad874b56b0d02a3e35ac1ddd26f3048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29aa91e18ca303d754ccd1d5bde4a7ef"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a29aa91e18ca303d754ccd1d5bde4a7ef"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a29aa91e18ca303d754ccd1d5bde4a7ef">fromWide</a> (In begin, In end, Out output)</td></tr>
<tr class="memdesc:a29aa91e18ca303d754ccd1d5bde4a7ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a wide characters range to UTF-16.  <a href="#a29aa91e18ca303d754ccd1d5bde4a7ef">More...</a><br /></td></tr>
<tr class="separator:a29aa91e18ca303d754ccd1d5bde4a7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51504446ac67461d593d34915ffba217"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a51504446ac67461d593d34915ffba217"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a51504446ac67461d593d34915ffba217">fromLatin1</a> (In begin, In end, Out output)</td></tr>
<tr class="memdesc:a51504446ac67461d593d34915ffba217"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a latin-1 (ISO-5589-1) characters range to UTF-16.  <a href="#a51504446ac67461d593d34915ffba217">More...</a><br /></td></tr>
<tr class="separator:a51504446ac67461d593d34915ffba217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fe4029cf480f8652b6b09e0d3e7a370"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a8fe4029cf480f8652b6b09e0d3e7a370"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a8fe4029cf480f8652b6b09e0d3e7a370">toAnsi</a> (In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td></tr>
<tr class="memdesc:a8fe4029cf480f8652b6b09e0d3e7a370"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to ANSI characters.  <a href="#a8fe4029cf480f8652b6b09e0d3e7a370">More...</a><br /></td></tr>
<tr class="separator:a8fe4029cf480f8652b6b09e0d3e7a370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5">toWide</a> (In begin, In end, Out output, wchar_t replacement=0)</td></tr>
<tr class="memdesc:ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to wide characters.  <a href="#ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5">More...</a><br /></td></tr>
<tr class="separator:ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732679b135a6c811e2fd2af4db050f7e"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a732679b135a6c811e2fd2af4db050f7e"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a732679b135a6c811e2fd2af4db050f7e">toLatin1</a> (In begin, In end, Out output, char replacement=0)</td></tr>
<tr class="memdesc:a732679b135a6c811e2fd2af4db050f7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to latin-1 (ISO-5589-1) characters.  <a href="#a732679b135a6c811e2fd2af4db050f7e">More...</a><br /></td></tr>
<tr class="separator:a732679b135a6c811e2fd2af4db050f7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2118711b9f5e0c0e6ad1b7b9c4d7b5"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a3d2118711b9f5e0c0e6ad1b7b9c4d7b5"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a3d2118711b9f5e0c0e6ad1b7b9c4d7b5">toUtf8</a> (In begin, In end, Out output)</td></tr>
<tr class="memdesc:a3d2118711b9f5e0c0e6ad1b7b9c4d7b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-8.  <a href="#a3d2118711b9f5e0c0e6ad1b7b9c4d7b5">More...</a><br /></td></tr>
<tr class="separator:a3d2118711b9f5e0c0e6ad1b7b9c4d7b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb7b90d35456116b15fdf3210f23e951"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:adb7b90d35456116b15fdf3210f23e951"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#adb7b90d35456116b15fdf3210f23e951">toUtf16</a> (In begin, In end, Out output)</td></tr>
<tr class="memdesc:adb7b90d35456116b15fdf3210f23e951"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-16.  <a href="#adb7b90d35456116b15fdf3210f23e951">More...</a><br /></td></tr>
<tr class="separator:adb7b90d35456116b15fdf3210f23e951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3382ef3ae9eca2618563bd651826af"><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr class="memitem:a1e3382ef3ae9eca2618563bd651826af"><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Utf_3_0116_01_4.htm#a1e3382ef3ae9eca2618563bd651826af">toUtf32</a> (In begin, In end, Out output)</td></tr>
<tr class="memdesc:a1e3382ef3ae9eca2618563bd651826af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-32.  <a href="#a1e3382ef3ae9eca2618563bd651826af">More...</a><br /></td></tr>
<tr class="separator:a1e3382ef3ae9eca2618563bd651826af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;&gt;<br />
class cpp3ds::Utf&lt; 16 &gt;</h3>

<p>Specialization of the <a class="el" href="classcpp3ds_1_1Utf.htm" title="Utility class providing generic functions for UTF conversions. ">Utf</a> template for UTF-16. </p>

<p>Definition at line <a class="el" href="Utf_8hpp_source.htm#l00255">255</a> of file <a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac08784066d1a352181250fb8b3b2badf"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::size_t <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::count </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Count the number of characters of a UTF-16 sequence. </p>
<p>This function is necessary for multi-elements encodings, as a single character may use more than 1 storage element, thus the total size can be different from (begin - end).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="ac13abc71fbf865d5b1afbc579d72f018"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static In <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::decode </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint32 &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint32&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Decode a single UTF-16 character. </p>
<p>Decoding a character means finding its unique 32-bits code (called the codepoint) in the Unicode standard.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Codepoint of the decoded UTF-16 character </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement character to use in case the UTF-8 sequence is invalid</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="a844b78ea8c05db2dc920e57b00de15fe"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::encode </td>
          <td>(</td>
          <td class="paramtype">Uint32&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint16&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Encode a single UTF-16 character. </p>
<p>Encoding a character means converting a unique 32-bits code (called the codepoint) in the target encoding, UTF-16.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">input</td><td>Codepoint to encode as UTF-16 </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to UTF-16 (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a0ad874b56b0d02a3e35ac1ddd26f3048"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::fromAnsi </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;&#160;</td>
          <td class="paramname"><em>locale</em> = <code>std::locale()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an ANSI characters range to UTF-16. </p>
<p>The current global locale will be used by default, unless you pass a custom one in the <em>locale</em> parameter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">locale</td><td>Locale to use for conversion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a51504446ac67461d593d34915ffba217"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::fromLatin1 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a latin-1 (ISO-5589-1) characters range to UTF-16. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a29aa91e18ca303d754ccd1d5bde4a7ef"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::fromWide </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a wide characters range to UTF-16. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a0d63cb432548eee52b83d7089cf8681b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static In <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::next </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Advance to the next UTF-16 character. </p>
<p>This function is necessary for multi-elements encodings, as a single character may use more than 1 storage element.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="a8fe4029cf480f8652b6b09e0d3e7a370"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toAnsi </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;&#160;</td>
          <td class="paramname"><em>locale</em> = <code>std::locale()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an UTF-16 characters range to ANSI characters. </p>
<p>The current global locale will be used by default, unless you pass a custom one in the <em>locale</em> parameter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to ANSI (use 0 to skip them) </td></tr>
    <tr><td class="paramname">locale</td><td>Locale to use for conversion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a732679b135a6c811e2fd2af4db050f7e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toLatin1 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an UTF-16 characters range to latin-1 (ISO-5589-1) characters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to wide (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="adb7b90d35456116b15fdf3210f23e951"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toUtf16 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-16. </p>
<p>This functions does nothing more than a direct copy; it is defined only to provide the same interface as other specializations of the cpp3ds::Utf&lt;&gt; template, and allow generic code to be written on top of it.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a1e3382ef3ae9eca2618563bd651826af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toUtf32 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-32. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a3d2118711b9f5e0c0e6ad1b7b9c4d7b5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toUtf8 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-8. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="ae3cf6e1b6c4fa6c1f7b88fef6cffb0d5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classcpp3ds_1_1Utf.htm">cpp3ds::Utf</a>&lt; 16 &gt;::toWide </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an UTF-16 characters range to wide characters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to wide (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
