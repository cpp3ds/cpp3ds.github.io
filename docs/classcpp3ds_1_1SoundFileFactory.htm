<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm">SoundFileFactory</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1SoundFileFactory-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::SoundFileFactory Class Reference<div class="ingroups"><a class="el" href="group__audio.htm">Audio module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Manages and instantiates sound file readers and writers.  
 <a href="classcpp3ds_1_1SoundFileFactory.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundFileFactory_8hpp_source.htm">SoundFileFactory.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9a026687a9e229691a51c229f49a46e4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9a026687a9e229691a51c229f49a46e4"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9a026687a9e229691a51c229f49a46e4">registerReader</a> ()</td></tr>
<tr class="memdesc:a9a026687a9e229691a51c229f49a46e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a new reader.  <a href="#a9a026687a9e229691a51c229f49a46e4">More...</a><br /></td></tr>
<tr class="separator:a9a026687a9e229691a51c229f49a46e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508a6fd112c770a11c5c9da1a417a418"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a508a6fd112c770a11c5c9da1a417a418"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a508a6fd112c770a11c5c9da1a417a418">unregisterReader</a> ()</td></tr>
<tr class="memdesc:a508a6fd112c770a11c5c9da1a417a418"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister a reader.  <a href="#a508a6fd112c770a11c5c9da1a417a418">More...</a><br /></td></tr>
<tr class="separator:a508a6fd112c770a11c5c9da1a417a418"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d362129230e41dd345e7868e821586a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9d362129230e41dd345e7868e821586a"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9d362129230e41dd345e7868e821586a">registerWriter</a> ()</td></tr>
<tr class="memdesc:a9d362129230e41dd345e7868e821586a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a new writer.  <a href="#a9d362129230e41dd345e7868e821586a">More...</a><br /></td></tr>
<tr class="separator:a9d362129230e41dd345e7868e821586a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a193c7e998f568d9329c80f3747ee82"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8a193c7e998f568d9329c80f3747ee82"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a8a193c7e998f568d9329c80f3747ee82">unregisterWriter</a> ()</td></tr>
<tr class="memdesc:a8a193c7e998f568d9329c80f3747ee82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister a writer.  <a href="#a8a193c7e998f568d9329c80f3747ee82">More...</a><br /></td></tr>
<tr class="separator:a8a193c7e998f568d9329c80f3747ee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc627565643cb88827a2ea325cd4c86d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#abc627565643cb88827a2ea325cd4c86d">createReaderFromFilename</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:abc627565643cb88827a2ea325cd4c86d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instantiate the right reader for the given file on disk.  <a href="#abc627565643cb88827a2ea325cd4c86d">More...</a><br /></td></tr>
<tr class="separator:abc627565643cb88827a2ea325cd4c86d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c52854ad0b8991de3a9dd16996b7e53"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a0c52854ad0b8991de3a9dd16996b7e53">createReaderFromMemory</a> (const void *data, std::size_t sizeInBytes)</td></tr>
<tr class="memdesc:a0c52854ad0b8991de3a9dd16996b7e53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instantiate the right codec for the given file in memory.  <a href="#a0c52854ad0b8991de3a9dd16996b7e53">More...</a><br /></td></tr>
<tr class="separator:a0c52854ad0b8991de3a9dd16996b7e53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ca419d8d7a5b10b0aef878f2fcbc69"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a81ca419d8d7a5b10b0aef878f2fcbc69">createReaderFromStream</a> (<a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;stream)</td></tr>
<tr class="memdesc:a81ca419d8d7a5b10b0aef878f2fcbc69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instantiate the right codec for the given file in stream.  <a href="#a81ca419d8d7a5b10b0aef878f2fcbc69">More...</a><br /></td></tr>
<tr class="separator:a81ca419d8d7a5b10b0aef878f2fcbc69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72a4455dd1f6c0d7ba90c30b93f85d4d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classcpp3ds_1_1SoundFileWriter.htm">SoundFileWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a72a4455dd1f6c0d7ba90c30b93f85d4d">createWriterFromFilename</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:a72a4455dd1f6c0d7ba90c30b93f85d4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instantiate the right writer for the given file on disk.  <a href="#a72a4455dd1f6c0d7ba90c30b93f85d4d">More...</a><br /></td></tr>
<tr class="separator:a72a4455dd1f6c0d7ba90c30b93f85d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Manages and instantiates sound file readers and writers. </p>
<p>This class is where all the sound file readers and writers are registered.</p>
<p>You should normally only need to use its registration and unregistration functions; readers/writers creation and manipulation are wrapped into the higher-level classes <a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a> and <a class="el" href="classcpp3ds_1_1OutputSoundFile.htm" title="Provide write access to sound files. ">cpp3ds::OutputSoundFile</a>.</p>
<p>To register a new reader (writer) use the <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9a026687a9e229691a51c229f49a46e4" title="Register a new reader. ">cpp3ds::SoundFileFactory::registerReader</a> (registerWriter) static function. You don't have to call the unregisterReader (unregisterWriter) function, unless you want to unregister a format before your application ends (typically, when a plugin is unloaded).</p>
<p>Usage example: </p><div class="fragment"><div class="line">cpp3ds::SoundFileFactory::registerReader&lt;MySoundFileReader&gt;();</div>
<div class="line">cpp3ds::SoundFileFactory::registerWriter&lt;MySoundFileWriter&gt;();</div>
</div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a>, <a class="el" href="classcpp3ds_1_1OutputSoundFile.htm" title="Provide write access to sound files. ">cpp3ds::OutputSoundFile</a>, <a class="el" href="classcpp3ds_1_1SoundFileReader.htm" title="Abstract base class for sound file decoding. ">cpp3ds::SoundFileReader</a>, <a class="el" href="classcpp3ds_1_1SoundFileWriter.htm" title="Abstract base class for sound file encoding. ">cpp3ds::SoundFileWriter</a> </dd></dl>

<p>Definition at line <a class="el" href="SoundFileFactory_8hpp_source.htm#l00045">45</a> of file <a class="el" href="SoundFileFactory_8hpp_source.htm">SoundFileFactory.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="abc627565643cb88827a2ea325cd4c86d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a>* cpp3ds::SoundFileFactory::createReaderFromFilename </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instantiate the right reader for the given file on disk. </p>
<p>It's up to the caller to release the returned reader</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path of the sound file</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new sound file reader that can read the given file, or null if no reader can handle it</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a0c52854ad0b8991de3a9dd16996b7e53" title="Instantiate the right codec for the given file in memory. ">createReaderFromMemory</a>, <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a81ca419d8d7a5b10b0aef878f2fcbc69" title="Instantiate the right codec for the given file in stream. ">createReaderFromStream</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a0c52854ad0b8991de3a9dd16996b7e53"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a>* cpp3ds::SoundFileFactory::createReaderFromMemory </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>sizeInBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instantiate the right codec for the given file in memory. </p>
<p>It's up to the caller to release the returned reader</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the file data in memory </td></tr>
    <tr><td class="paramname">sizeInBytes</td><td>Total size of the file data, in bytes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new sound file codec that can read the given file, or null if no codec can handle it</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#abc627565643cb88827a2ea325cd4c86d" title="Instantiate the right reader for the given file on disk. ">createReaderFromFilename</a>, <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a81ca419d8d7a5b10b0aef878f2fcbc69" title="Instantiate the right codec for the given file in stream. ">createReaderFromStream</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a81ca419d8d7a5b10b0aef878f2fcbc69"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a>* cpp3ds::SoundFileFactory::createReaderFromStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instantiate the right codec for the given file in stream. </p>
<p>It's up to the caller to release the returned reader</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Source stream to read from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new sound file codec that can read the given file, or null if no codec can handle it</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#abc627565643cb88827a2ea325cd4c86d" title="Instantiate the right reader for the given file on disk. ">createReaderFromFilename</a>, <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a0c52854ad0b8991de3a9dd16996b7e53" title="Instantiate the right codec for the given file in memory. ">createReaderFromMemory</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a72a4455dd1f6c0d7ba90c30b93f85d4d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classcpp3ds_1_1SoundFileWriter.htm">SoundFileWriter</a>* cpp3ds::SoundFileFactory::createWriterFromFilename </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instantiate the right writer for the given file on disk. </p>
<p>It's up to the caller to release the returned writer</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path of the sound file</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new sound file writer that can write given file, or null if no writer can handle it </dd></dl>

</div>
</div>
<a class="anchor" id="a9a026687a9e229691a51c229f49a46e4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cpp3ds::SoundFileFactory::registerReader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Register a new reader. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a508a6fd112c770a11c5c9da1a417a418" title="Unregister a reader. ">unregisterReader</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a9d362129230e41dd345e7868e821586a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cpp3ds::SoundFileFactory::registerWriter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Register a new writer. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a8a193c7e998f568d9329c80f3747ee82" title="Unregister a writer. ">unregisterWriter</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a508a6fd112c770a11c5c9da1a417a418"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cpp3ds::SoundFileFactory::unregisterReader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unregister a reader. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9a026687a9e229691a51c229f49a46e4" title="Register a new reader. ">registerReader</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a8a193c7e998f568d9329c80f3747ee82"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cpp3ds::SoundFileFactory::unregisterWriter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unregister a writer. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9d362129230e41dd345e7868e821586a" title="Register a new writer. ">registerWriter</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundFileFactory_8hpp_source.htm">SoundFileFactory.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
