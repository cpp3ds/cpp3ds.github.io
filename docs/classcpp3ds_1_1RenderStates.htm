<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1RenderStates.htm">RenderStates</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="classcpp3ds_1_1RenderStates-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::RenderStates Class Reference<div class="ingroups"><a class="el" href="group__graphics.htm">Graphics module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Define the states used for drawing to a <a class="el" href="classcpp3ds_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...) ">RenderTarget</a>.  
 <a href="classcpp3ds_1_1RenderStates.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9c3b5868e83097aa8eda6589a1f44c5b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a9c3b5868e83097aa8eda6589a1f44c5b">RenderStates</a> ()</td></tr>
<tr class="memdesc:a9c3b5868e83097aa8eda6589a1f44c5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a9c3b5868e83097aa8eda6589a1f44c5b">More...</a><br /></td></tr>
<tr class="separator:a9c3b5868e83097aa8eda6589a1f44c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49d2d391d699d3549caea7f6c154d170"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a49d2d391d699d3549caea7f6c154d170">RenderStates</a> (const <a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a> &amp;theBlendMode)</td></tr>
<tr class="memdesc:a49d2d391d699d3549caea7f6c154d170"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a default set of render states with a custom blend mode.  <a href="#a49d2d391d699d3549caea7f6c154d170">More...</a><br /></td></tr>
<tr class="separator:a49d2d391d699d3549caea7f6c154d170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad03cee39d1c640dcd2d040ee6081555f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#ad03cee39d1c640dcd2d040ee6081555f">RenderStates</a> (const <a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a> &amp;theTransform)</td></tr>
<tr class="memdesc:ad03cee39d1c640dcd2d040ee6081555f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a default set of render states with a custom transform.  <a href="#ad03cee39d1c640dcd2d040ee6081555f">More...</a><br /></td></tr>
<tr class="separator:ad03cee39d1c640dcd2d040ee6081555f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5a3e5525cad41fa09ff881039c786e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a5d5a3e5525cad41fa09ff881039c786e">RenderStates</a> (const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a> *theTexture)</td></tr>
<tr class="memdesc:a5d5a3e5525cad41fa09ff881039c786e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a default set of render states with a custom texture.  <a href="#a5d5a3e5525cad41fa09ff881039c786e">More...</a><br /></td></tr>
<tr class="separator:a5d5a3e5525cad41fa09ff881039c786e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ff5e024dfe0e2f90be05c192d298b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a7ff5e024dfe0e2f90be05c192d298b16">RenderStates</a> (const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a> *theShader)</td></tr>
<tr class="memdesc:a7ff5e024dfe0e2f90be05c192d298b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a default set of render states with a custom shader.  <a href="#a7ff5e024dfe0e2f90be05c192d298b16">More...</a><br /></td></tr>
<tr class="separator:a7ff5e024dfe0e2f90be05c192d298b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae0f1962fb3980d4aa37c951befbd1c6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#aae0f1962fb3980d4aa37c951befbd1c6">RenderStates</a> (const <a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a> &amp;theBlendMode, const <a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a> &amp;theTransform, const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a> *theTexture, const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a> *theShader)</td></tr>
<tr class="memdesc:aae0f1962fb3980d4aa37c951befbd1c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a set of render states with all its attributes.  <a href="#aae0f1962fb3980d4aa37c951befbd1c6">More...</a><br /></td></tr>
<tr class="separator:aae0f1962fb3980d4aa37c951befbd1c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ab6a47c8446dfe38bff18751057177f26"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#ab6a47c8446dfe38bff18751057177f26">blendMode</a></td></tr>
<tr class="memdesc:ab6a47c8446dfe38bff18751057177f26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blending mode.  <a href="#ab6a47c8446dfe38bff18751057177f26">More...</a><br /></td></tr>
<tr class="separator:ab6a47c8446dfe38bff18751057177f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a785ecb9873e2aacf58b0be8fc278e22f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a785ecb9873e2aacf58b0be8fc278e22f">transform</a></td></tr>
<tr class="memdesc:a785ecb9873e2aacf58b0be8fc278e22f"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcpp3ds_1_1Transform.htm" title="Define a 3x3 transform matrix. ">Transform</a>.  <a href="#a785ecb9873e2aacf58b0be8fc278e22f">More...</a><br /></td></tr>
<tr class="separator:a785ecb9873e2aacf58b0be8fc278e22f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1afb6343f5d4be92e5c608942e239fd4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#a1afb6343f5d4be92e5c608942e239fd4">texture</a></td></tr>
<tr class="memdesc:a1afb6343f5d4be92e5c608942e239fd4"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcpp3ds_1_1Texture.htm" title="some things could easily be broken/////// ">Texture</a>.  <a href="#a1afb6343f5d4be92e5c608942e239fd4">More...</a><br /></td></tr>
<tr class="separator:a1afb6343f5d4be92e5c608942e239fd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec614cf2a212896e39fa16624436b2bb"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#aec614cf2a212896e39fa16624436b2bb">shader</a></td></tr>
<tr class="memdesc:aec614cf2a212896e39fa16624436b2bb"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcpp3ds_1_1Shader.htm" title="Shader class (vertex and fragment) ">Shader</a>.  <a href="#aec614cf2a212896e39fa16624436b2bb">More...</a><br /></td></tr>
<tr class="separator:aec614cf2a212896e39fa16624436b2bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:abf4de75522cf4deee9ef9bf145104c5e"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1RenderStates.htm">RenderStates</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1RenderStates.htm#abf4de75522cf4deee9ef9bf145104c5e">Default</a></td></tr>
<tr class="memdesc:abf4de75522cf4deee9ef9bf145104c5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special instance holding the default render states.  <a href="#abf4de75522cf4deee9ef9bf145104c5e">More...</a><br /></td></tr>
<tr class="separator:abf4de75522cf4deee9ef9bf145104c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Define the states used for drawing to a <a class="el" href="classcpp3ds_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...) ">RenderTarget</a>. </p>
<p>There are four global states that can be applied to the drawn objects:</p>
<ul>
<li>the blend mode: how pixels of the object are blended with the background </li>
<li>the transform: how the object is positioned/rotated/scaled </li>
<li>the texture: what image is mapped to the object </li>
<li>the shader: what custom effect is applied to the object</li>
</ul>
<p>High-level objects such as sprites or text force some of these states when they are drawn. For example, a sprite will set its own texture, so that you don't have to care about it when drawing the sprite.</p>
<p>The transform is a special case: sprites, texts and shapes (and it's a good idea to do it with your own drawable classes too) combine their transform with the one that is passed in the <a class="el" href="classcpp3ds_1_1RenderStates.htm" title="Define the states used for drawing to a RenderTarget. ">RenderStates</a> structure. So that you can use a "global" transform on top of each object's transform.</p>
<p>Most objects, especially high-level drawables, can be drawn directly without defining render states explicitely &ndash; the default set of states is ok in most cases. </p><div class="fragment"><div class="line">window.Draw(sprite);</div>
</div><!-- fragment --><p>If you want to use a single specific render state, for example a shader, you can pass it directly to the Draw function: <a class="el" href="classcpp3ds_1_1RenderStates.htm" title="Define the states used for drawing to a RenderTarget. ">cpp3ds::RenderStates</a> has an implicit one-argument constructor for each state. </p><div class="fragment"><div class="line">window.draw(sprite, <a class="code" href="classcpp3ds_1_1RenderStates.htm#aec614cf2a212896e39fa16624436b2bb">shader</a>);</div>
</div><!-- fragment --><p>When you're inside the Draw function of a drawable object (inherited from <a class="el" href="classcpp3ds_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target. ">cpp3ds::Drawable</a>), you can either pass the render states unmodified, or change some of them. For example, a transformable object will combine the current transform with its own transform. A sprite will set its texture. Etc.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...) ">cpp3ds::RenderTarget</a>, <a class="el" href="classcpp3ds_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target. ">cpp3ds::Drawable</a> </dd></dl>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00044">44</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9c3b5868e83097aa8eda6589a1f44c5b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>Constructing a default set of render states is equivalent to using <a class="el" href="classcpp3ds_1_1RenderStates.htm#abf4de75522cf4deee9ef9bf145104c5e" title="Special instance holding the default render states. ">cpp3ds::RenderStates::Default</a>. The default set defines: </p><ul>
<li>the BlendAlpha blend mode </li>
<li>the identity transform </li>
<li>a null texture </li>
<li>a null shader </li>
</ul>

</div>
</div>
<a class="anchor" id="a49d2d391d699d3549caea7f6c154d170"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a> &amp;&#160;</td>
          <td class="paramname"><em>theBlendMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a default set of render states with a custom blend mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">theBlendMode</td><td>Blend mode to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad03cee39d1c640dcd2d040ee6081555f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>theTransform</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a default set of render states with a custom transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">theTransform</td><td><a class="el" href="classcpp3ds_1_1Transform.htm" title="Define a 3x3 transform matrix. ">Transform</a> to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5d5a3e5525cad41fa09ff881039c786e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a> *&#160;</td>
          <td class="paramname"><em>theTexture</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a default set of render states with a custom texture. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">theTexture</td><td><a class="el" href="classcpp3ds_1_1Texture.htm" title="some things could easily be broken/////// ">Texture</a> to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7ff5e024dfe0e2f90be05c192d298b16"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a> *&#160;</td>
          <td class="paramname"><em>theShader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a default set of render states with a custom shader. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">theShader</td><td><a class="el" href="classcpp3ds_1_1Shader.htm" title="Shader class (vertex and fragment) ">Shader</a> to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aae0f1962fb3980d4aa37c951befbd1c6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::RenderStates::RenderStates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a> &amp;&#160;</td>
          <td class="paramname"><em>theBlendMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>theTransform</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a> *&#160;</td>
          <td class="paramname"><em>theTexture</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a> *&#160;</td>
          <td class="paramname"><em>theShader</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a set of render states with all its attributes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">theBlendMode</td><td>Blend mode to use </td></tr>
    <tr><td class="paramname">theTransform</td><td><a class="el" href="classcpp3ds_1_1Transform.htm" title="Define a 3x3 transform matrix. ">Transform</a> to use </td></tr>
    <tr><td class="paramname">theTexture</td><td><a class="el" href="classcpp3ds_1_1Texture.htm" title="some things could easily be broken/////// ">Texture</a> to use </td></tr>
    <tr><td class="paramname">theShader</td><td><a class="el" href="classcpp3ds_1_1Shader.htm" title="Shader class (vertex and fragment) ">Shader</a> to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab6a47c8446dfe38bff18751057177f26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structcpp3ds_1_1BlendMode.htm">BlendMode</a> cpp3ds::RenderStates::blendMode</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Blending mode. </p>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00114">114</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="abf4de75522cf4deee9ef9bf145104c5e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1RenderStates.htm">RenderStates</a> cpp3ds::RenderStates::Default</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Special instance holding the default render states. </p>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00109">109</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aec614cf2a212896e39fa16624436b2bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Shader.htm">Shader</a>* cpp3ds::RenderStates::shader</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classcpp3ds_1_1Shader.htm" title="Shader class (vertex and fragment) ">Shader</a>. </p>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00117">117</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1afb6343f5d4be92e5c608942e239fd4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Texture.htm">Texture</a>* cpp3ds::RenderStates::texture</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classcpp3ds_1_1Texture.htm" title="some things could easily be broken/////// ">Texture</a>. </p>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00116">116</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a785ecb9873e2aacf58b0be8fc278e22f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Transform.htm">Transform</a> cpp3ds::RenderStates::transform</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classcpp3ds_1_1Transform.htm" title="Define a 3x3 transform matrix. ">Transform</a>. </p>

<p>Definition at line <a class="el" href="RenderStates_8hpp_source.htm#l00115">115</a> of file <a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="RenderStates_8hpp_source.htm">RenderStates.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
