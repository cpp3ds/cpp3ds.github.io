<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_0b93ed46ee854382aab85c778b89946e.htm">include</a></li><li class="navelem"><a class="el" href="dir_18d409fe281a3b15bd325ab753ead42a.htm">cpp3ds</a></li><li class="navelem"><a class="el" href="dir_c5c778fd8c9c629bd120f7f9ff00b45a.htm">System</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">I18n.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef CPP3DS_I18N_HPP</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define CPP3DS_I18N_HPP</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#ifndef EMULATION</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;3ds.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;cpp3ds/System/String.hpp&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#define _(key, ...) (cpp3ds::I18n::getInstance().translate(key, ##__VA_ARGS__))</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span>{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> ... Args&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classcpp3ds_1_1String.htm">cpp3ds::String</a> string_format( <span class="keyword">const</span> std::string&amp; format, Args ... args )</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordtype">size_t</span> size = snprintf( <span class="keyword">nullptr</span>, 0, format.c_str(), args ... ) + 1; <span class="comment">// Extra space for &#39;\0&#39;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        std::unique_ptr&lt;char[]&gt; buf( <span class="keyword">new</span> <span class="keywordtype">char</span>[ size ] );</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        snprintf( buf.get(), size, format.c_str(), args ... );</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        std::string stringUtf8( buf.get(), buf.get() + size - 1 ); <span class="comment">// We don&#39;t want the &#39;\0&#39; inside</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        std::wstring stringUtf32;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <a class="code" href="classcpp3ds_1_1Utf_3_018_01_4.htm#a9f652c017b7821c0800de079f4c6fa8c">cpp3ds::Utf8::toUtf32</a>(stringUtf8.begin(), stringUtf8.end(), std::back_inserter(stringUtf32));</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classcpp3ds_1_1String.htm">cpp3ds::String</a>(stringUtf32);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacecpp3ds.htm">cpp3ds</a> {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">enum</span> Language {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    Japanese    = 0,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    English     = 1,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    French,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    German,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    Italian,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    Spanish,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    ChineseSimplified,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    Korean,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    Dutch,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    Portuguese,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    Russian,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ChineseTraditional,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1I18n.htm">   50</a></span>&#160;<span class="keyword">class </span><a class="code" href="classcpp3ds_1_1I18n.htm">I18n</a> {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">static</span> <a class="code" href="classcpp3ds_1_1I18n.htm">I18n</a>&amp; getInstance();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> loadLanguage(Language language);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> loadLanguageFile(<span class="keyword">const</span> std::string&amp; filename);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">static</span> Language getLanguage();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> ... Args&gt;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1String.htm">String</a> translate(<span class="keyword">const</span> <span class="keywordtype">char</span>* key, Args ... args)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        std::string trans;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        TranslationMap::const_iterator it = m_content.find(key);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">if</span> (it == m_content.end())</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            trans = std::string(key);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            trans = it-&gt;second;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> string_format(trans, args ...);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> ... Args&gt;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1String.htm">String</a> translate(<span class="keyword">const</span> std::string&amp; key, Args ... args)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> translate(key.c_str(), args ...);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> std::string getLangString(<span class="keyword">const</span> Language language) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classcpp3ds_1_1I18n.htm">I18n</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classcpp3ds_1_1I18n.htm">I18n</a>(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1I18n.htm">I18n</a> &amp;);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">bool</span> loadFromFile(<span class="keyword">const</span> std::string filename);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">bool</span> loadFromLanguage(<span class="keyword">const</span> Language language);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">typedef</span> std::map &lt;std::string, std::string&gt; TranslationMap;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    TranslationMap m_content;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    Language m_language;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;} <span class="comment">// namespace cpp3ds</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif // CPP3DS_I18N_HPP</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">////////////////////////////////////////////////////////////</span></div>
<div class="ttc" id="namespacecpp3ds_htm"><div class="ttname"><a href="namespacecpp3ds.htm">cpp3ds</a></div><div class="ttdef"><b>Definition:</b> <a href="AlResource_8hpp_source.htm#l00033">AlResource.hpp:33</a></div></div>
<div class="ttc" id="classcpp3ds_1_1String_htm"><div class="ttname"><a href="classcpp3ds_1_1String.htm">cpp3ds::String</a></div><div class="ttdoc">Utility string class that automatically handles conversions between types and encodings. </div><div class="ttdef"><b>Definition:</b> <a href="String_8hpp_source.htm#l00042">String.hpp:42</a></div></div>
<div class="ttc" id="classcpp3ds_1_1I18n_htm"><div class="ttname"><a href="classcpp3ds_1_1I18n.htm">cpp3ds::I18n</a></div><div class="ttdef"><b>Definition:</b> <a href="I18n_8hpp_source.htm#l00050">I18n.hpp:50</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Utf_3_018_01_4_htm_a9f652c017b7821c0800de079f4c6fa8c"><div class="ttname"><a href="classcpp3ds_1_1Utf_3_018_01_4.htm#a9f652c017b7821c0800de079f4c6fa8c">cpp3ds::Utf&lt; 8 &gt;::toUtf32</a></div><div class="ttdeci">static Out toUtf32(In begin, In end, Out output)</div><div class="ttdoc">Convert a UTF-8 characters range to UTF-32. </div></div>
</div><!-- fragment --></div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
