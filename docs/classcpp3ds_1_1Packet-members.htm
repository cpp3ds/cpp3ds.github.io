<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1Packet.htm">Packet</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cpp3ds::Packet Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a9e6021ae516e633eebf10fd0a3394fe1">append</a>(const void *data, std::size_t sizeInBytes)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a424e1662c361c163ff88e32cdd3c2fb9">clear</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a9ff4568a4d5dd658c330f8ffec14615b">endOfPacket</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#aa45d062165ce26678c58e1041112e933">getData</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a7f6ed44f8f6d97f647e54dccb9318e42">getDataSize</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#aee63e77352258fad7f727613ebe023a6">onReceive</a>(const void *data, std::size_t size)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#acbbaf624a1081e0e159ee174befd8fc2">onSend</a>(std::size_t &amp;size)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#ae3d42a7ea7293fcd0ba6940b9a5a6214">operator BoolType</a>() const </td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a899945f8affdad971e80ea3abf8b6ae4">operator&lt;&lt;</a>(bool data)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(Int8 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(Uint8 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(Int16 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(Uint16 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(Int32 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(Uint32 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(Int64 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(Uint64 data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(float data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(double data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(const char *data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(const std::string &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(const wchar_t *data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&lt;&lt;</b>(const std::wstring &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&lt;&lt;</b>(const String &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#ac57e21acfaa7229fd6c2f2f34fd89677">operator&gt;&gt;</a>(bool &amp;data)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(Int8 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(Uint8 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(Int16 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(Uint16 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(Int32 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(Uint32 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(Int64 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(Uint64 &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(float &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(double &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(char *data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(std::string &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(wchar_t *data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator&gt;&gt;</b>(std::wstring &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>operator&gt;&gt;</b>(String &amp;data) (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a86aa069e5affd96e34e9d483b36a19c1">Packet</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>TcpSocket</b> (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>UdpSocket</b> (defined in <a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a>)</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm#a3a522bb0f380066ac3c46fdf7aa4e7bb">~Packet</a>()</td><td class="entry"><a class="el" href="classcpp3ds_1_1Packet.htm">cpp3ds::Packet</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
