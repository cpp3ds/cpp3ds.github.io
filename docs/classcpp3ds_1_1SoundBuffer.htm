<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classcpp3ds_1_1SoundBuffer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::SoundBuffer Class Reference<div class="ingroups"><a class="el" href="group__audio.htm">Audio module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Storage for audio samples defining a sound.  
 <a href="classcpp3ds_1_1SoundBuffer.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundBuffer_8hpp_source.htm">SoundBuffer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for cpp3ds::SoundBuffer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classcpp3ds_1_1SoundBuffer.png" usemap="#cpp3ds::SoundBuffer_map" alt=""/>
  <map id="cpp3ds::SoundBuffer_map" name="cpp3ds::SoundBuffer_map">
<area href="classcpp3ds_1_1AlResource.htm" title="Base class for classes that require an OpenAL context. " alt="cpp3ds::AlResource" shape="rect" coords="0,0,130,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a24afa8f663308da3e8a85fadd818515f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a24afa8f663308da3e8a85fadd818515f">SoundBuffer</a> ()</td></tr>
<tr class="memdesc:a24afa8f663308da3e8a85fadd818515f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a24afa8f663308da3e8a85fadd818515f">More...</a><br /></td></tr>
<tr class="separator:a24afa8f663308da3e8a85fadd818515f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f16274e9fd4bf107f69cb3a7e14f8bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a2f16274e9fd4bf107f69cb3a7e14f8bd">SoundBuffer</a> (const <a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a> &amp;copy)</td></tr>
<tr class="memdesc:a2f16274e9fd4bf107f69cb3a7e14f8bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a2f16274e9fd4bf107f69cb3a7e14f8bd">More...</a><br /></td></tr>
<tr class="separator:a2f16274e9fd4bf107f69cb3a7e14f8bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ca954e76293abc5fd1c1d4fcf708de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#af8ca954e76293abc5fd1c1d4fcf708de">~SoundBuffer</a> ()</td></tr>
<tr class="memdesc:af8ca954e76293abc5fd1c1d4fcf708de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#af8ca954e76293abc5fd1c1d4fcf708de">More...</a><br /></td></tr>
<tr class="separator:af8ca954e76293abc5fd1c1d4fcf708de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae20a3eb8d2a8f13d7dc2fcb32f3b318b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b">loadFromFile</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:ae20a3eb8d2a8f13d7dc2fcb32f3b318b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from a file.  <a href="#ae20a3eb8d2a8f13d7dc2fcb32f3b318b">More...</a><br /></td></tr>
<tr class="separator:ae20a3eb8d2a8f13d7dc2fcb32f3b318b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5a27f1cea00cc06878fbd2fa70c6cc1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ad5a27f1cea00cc06878fbd2fa70c6cc1">loadFromMemory</a> (const void *data, std::size_t sizeInBytes)</td></tr>
<tr class="memdesc:ad5a27f1cea00cc06878fbd2fa70c6cc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from a file in memory.  <a href="#ad5a27f1cea00cc06878fbd2fa70c6cc1">More...</a><br /></td></tr>
<tr class="separator:ad5a27f1cea00cc06878fbd2fa70c6cc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5439b000bdf3cd465bfe87365ec656af"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5439b000bdf3cd465bfe87365ec656af">loadFromStream</a> (<a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;stream)</td></tr>
<tr class="memdesc:a5439b000bdf3cd465bfe87365ec656af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from a custom stream.  <a href="#a5439b000bdf3cd465bfe87365ec656af">More...</a><br /></td></tr>
<tr class="separator:a5439b000bdf3cd465bfe87365ec656af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5989be4ecbc9e60b2e801dc64414d29"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae5989be4ecbc9e60b2e801dc64414d29">loadFromSamples</a> (const Int16 *samples, Uint64 sampleCount, unsigned int channelCount, unsigned int sampleRate)</td></tr>
<tr class="memdesc:ae5989be4ecbc9e60b2e801dc64414d29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from an array of audio samples.  <a href="#ae5989be4ecbc9e60b2e801dc64414d29">More...</a><br /></td></tr>
<tr class="separator:ae5989be4ecbc9e60b2e801dc64414d29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac54eace6c7d90673d32d4b9f97c748a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ac54eace6c7d90673d32d4b9f97c748a4">saveToFile</a> (const std::string &amp;filename) const </td></tr>
<tr class="memdesc:ac54eace6c7d90673d32d4b9f97c748a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save the sound buffer to an audio file.  <a href="#ac54eace6c7d90673d32d4b9f97c748a4">More...</a><br /></td></tr>
<tr class="separator:ac54eace6c7d90673d32d4b9f97c748a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30a824b4bcc9a6398ab00ebd55acc412"><td class="memItemLeft" align="right" valign="top">const Int16 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a30a824b4bcc9a6398ab00ebd55acc412">getSamples</a> () const </td></tr>
<tr class="memdesc:a30a824b4bcc9a6398ab00ebd55acc412"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the array of audio samples stored in the buffer.  <a href="#a30a824b4bcc9a6398ab00ebd55acc412">More...</a><br /></td></tr>
<tr class="separator:a30a824b4bcc9a6398ab00ebd55acc412"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af58d2a9bf164008581c03f9838d36610"><td class="memItemLeft" align="right" valign="top">Uint64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#af58d2a9bf164008581c03f9838d36610">getSampleCount</a> () const </td></tr>
<tr class="memdesc:af58d2a9bf164008581c03f9838d36610"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of samples stored in the buffer.  <a href="#af58d2a9bf164008581c03f9838d36610">More...</a><br /></td></tr>
<tr class="separator:af58d2a9bf164008581c03f9838d36610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cc0e0b0ece48a6e9c82fe0c13ccf64c"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a7cc0e0b0ece48a6e9c82fe0c13ccf64c">getSampleRate</a> () const </td></tr>
<tr class="memdesc:a7cc0e0b0ece48a6e9c82fe0c13ccf64c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sample rate of the sound.  <a href="#a7cc0e0b0ece48a6e9c82fe0c13ccf64c">More...</a><br /></td></tr>
<tr class="separator:a7cc0e0b0ece48a6e9c82fe0c13ccf64c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab30cd96ec95129667661e0b8ecc8677"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#aab30cd96ec95129667661e0b8ecc8677">getChannelCount</a> () const </td></tr>
<tr class="memdesc:aab30cd96ec95129667661e0b8ecc8677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of channels used by the sound.  <a href="#aab30cd96ec95129667661e0b8ecc8677">More...</a><br /></td></tr>
<tr class="separator:aab30cd96ec95129667661e0b8ecc8677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5411e8b1df5f36dc2dc75fb87c7e5937"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Time.htm">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5411e8b1df5f36dc2dc75fb87c7e5937">getDuration</a> () const </td></tr>
<tr class="memdesc:a5411e8b1df5f36dc2dc75fb87c7e5937"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total duration of the sound.  <a href="#a5411e8b1df5f36dc2dc75fb87c7e5937">More...</a><br /></td></tr>
<tr class="separator:a5411e8b1df5f36dc2dc75fb87c7e5937"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab704bd89b3610efa19f7bbc488ccc0bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ab704bd89b3610efa19f7bbc488ccc0bd">operator=</a> (const <a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a> &amp;right)</td></tr>
<tr class="memdesc:ab704bd89b3610efa19f7bbc488ccc0bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of assignment operator.  <a href="#ab704bd89b3610efa19f7bbc488ccc0bd">More...</a><br /></td></tr>
<tr class="separator:ab704bd89b3610efa19f7bbc488ccc0bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a50914f77c7cf4fb97616c898c5291f4b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a50914f77c7cf4fb97616c898c5291f4b"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Sound</b></td></tr>
<tr class="separator:a50914f77c7cf4fb97616c898c5291f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Storage for audio samples defining a sound. </p>
<p>A sound buffer holds the data of a sound, which is an array of audio samples.</p>
<p>A sample is a 16 bits signed integer that defines the amplitude of the sound at a given time. The sound is then reconstituted by playing these samples at a high rate (for example, 44100 samples per second is the standard rate used for playing CDs). In short, audio samples are like texture pixels, and a <a class="el" href="classcpp3ds_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound. ">cpp3ds::SoundBuffer</a> is similar to a <a class="el" href="classcpp3ds_1_1Texture.htm" title="some things could easily be broken/////// ">cpp3ds::Texture</a>.</p>
<p>A sound buffer can be loaded from a file (see <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b" title="Load the sound buffer from a file. ">loadFromFile()</a> for the complete list of supported formats), from memory, from a custom stream (see <a class="el" href="classcpp3ds_1_1InputStream.htm" title="Abstract class for custom file input streams. ">cpp3ds::InputStream</a>) or directly from an array of samples. It can also be saved back to a file.</p>
<p><a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">Sound</a> buffers alone are not very useful: they hold the audio data but cannot be played. To do so, you need to use the <a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a> class, which provides functions to play/pause/stop the sound as well as changing the way it is outputted (volume, pitch, 3D position, ...). This separation allows more flexibility and better performances: indeed a <a class="el" href="classcpp3ds_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound. ">cpp3ds::SoundBuffer</a> is a heavy resource, and any operation on it is slow (often too slow for real-time applications). On the other side, a <a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a> is a lightweight object, which can use the audio data of a sound buffer and change the way it is played without actually modifying that data. Note that it is also possible to bind several <a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a> instances to the same <a class="el" href="classcpp3ds_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound. ">cpp3ds::SoundBuffer</a>.</p>
<p>It is important to note that the <a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a> instance doesn't copy the buffer that it uses, it only keeps a reference to it. Thus, a <a class="el" href="classcpp3ds_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound. ">cpp3ds::SoundBuffer</a> must not be destructed while it is used by a <a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a> (i.e. never write a function that uses a local <a class="el" href="classcpp3ds_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound. ">cpp3ds::SoundBuffer</a> instance for loading a sound).</p>
<p>Usage example: </p><div class="fragment"><div class="line"><span class="comment">// Declare a new sound buffer</span></div>
<div class="line"><a class="code" href="classcpp3ds_1_1SoundBuffer.htm">cpp3ds::SoundBuffer</a> buffer;</div>
<div class="line"></div>
<div class="line"><span class="comment">// Load it from a file</span></div>
<div class="line"><span class="keywordflow">if</span> (!buffer.<a class="code" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b">loadFromFile</a>(<span class="stringliteral">&quot;sound.wav&quot;</span>))</div>
<div class="line">{</div>
<div class="line">    <span class="comment">// error...</span></div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="comment">// Create a sound source and bind it to the buffer</span></div>
<div class="line"><a class="code" href="classcpp3ds_1_1Sound.htm">cpp3ds::Sound</a> sound1;</div>
<div class="line">sound1.<a class="code" href="classcpp3ds_1_1Sound.htm#a03ab837482477e9e1ab90cfa7a4cc875">setBuffer</a>(buffer);</div>
<div class="line"></div>
<div class="line"><span class="comment">// Play the sound</span></div>
<div class="line">sound1.<a class="code" href="classcpp3ds_1_1Sound.htm#a25c1caf49d6caed6ec6eaee22d10e870">play</a>();</div>
<div class="line"></div>
<div class="line"><span class="comment">// Create another sound source bound to the same buffer</span></div>
<div class="line"><a class="code" href="classcpp3ds_1_1Sound.htm">cpp3ds::Sound</a> sound2;</div>
<div class="line">sound2.<a class="code" href="classcpp3ds_1_1Sound.htm#a03ab837482477e9e1ab90cfa7a4cc875">setBuffer</a>(buffer);</div>
<div class="line"></div>
<div class="line"><span class="comment">// Play it with a higher pitch -- the first sound remains unchanged</span></div>
<div class="line">sound2.<a class="code" href="classcpp3ds_1_1SoundSource.htm#aacab7398c55dedf6259f3b32861a0561">setPitch</a>(2);</div>
<div class="line">sound2.<a class="code" href="classcpp3ds_1_1Sound.htm#a25c1caf49d6caed6ec6eaee22d10e870">play</a>();</div>
</div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">cpp3ds::Sound</a>, <a class="el" href="classcpp3ds_1_1SoundBufferRecorder.htm" title="Specialized SoundRecorder which stores the captured audio data into a sound buffer. ">cpp3ds::SoundBufferRecorder</a> </dd></dl>

<p>Definition at line <a class="el" href="SoundBuffer_8hpp_source.htm#l00051">51</a> of file <a class="el" href="SoundBuffer_8hpp_source.htm">SoundBuffer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a24afa8f663308da3e8a85fadd818515f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::SoundBuffer::SoundBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a2f16274e9fd4bf107f69cb3a7e14f8bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::SoundBuffer::SoundBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">copy</td><td>Instance to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af8ca954e76293abc5fd1c1d4fcf708de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::SoundBuffer::~SoundBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aab30cd96ec95129667661e0b8ecc8677"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int cpp3ds::SoundBuffer::getChannelCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the number of channels used by the sound. </p>
<p>If the sound is mono then the number of channels will be 1, 2 for stereo, etc.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of channels</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a7cc0e0b0ece48a6e9c82fe0c13ccf64c" title="Get the sample rate of the sound. ">getSampleRate</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5411e8b1df5f36dc2dc75fb87c7e5937" title="Get the total duration of the sound. ">getDuration</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a5411e8b1df5f36dc2dc75fb87c7e5937"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Time.htm">Time</a> cpp3ds::SoundBuffer::getDuration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the total duration of the sound. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classcpp3ds_1_1Sound.htm" title="Regular sound that can be played in the audio environment. ">Sound</a> duration</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a7cc0e0b0ece48a6e9c82fe0c13ccf64c" title="Get the sample rate of the sound. ">getSampleRate</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#aab30cd96ec95129667661e0b8ecc8677" title="Get the number of channels used by the sound. ">getChannelCount</a> </dd></dl>

</div>
</div>
<a class="anchor" id="af58d2a9bf164008581c03f9838d36610"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Uint64 cpp3ds::SoundBuffer::getSampleCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the number of samples stored in the buffer. </p>
<p>The array of samples can be accessed with the <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a30a824b4bcc9a6398ab00ebd55acc412" title="Get the array of audio samples stored in the buffer. ">getSamples()</a> function.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of samples</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a30a824b4bcc9a6398ab00ebd55acc412" title="Get the array of audio samples stored in the buffer. ">getSamples</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a7cc0e0b0ece48a6e9c82fe0c13ccf64c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int cpp3ds::SoundBuffer::getSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sample rate of the sound. </p>
<p>The sample rate is the number of samples played per second. The higher, the better the quality (for example, 44100 samples/s is CD quality).</p>
<dl class="section return"><dt>Returns</dt><dd>Sample rate (number of samples per second)</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#aab30cd96ec95129667661e0b8ecc8677" title="Get the number of channels used by the sound. ">getChannelCount</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5411e8b1df5f36dc2dc75fb87c7e5937" title="Get the total duration of the sound. ">getDuration</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a30a824b4bcc9a6398ab00ebd55acc412"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Int16* cpp3ds::SoundBuffer::getSamples </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the array of audio samples stored in the buffer. </p>
<p>The format of the returned samples is 16 bits signed integer (cpp3ds::Int16). The total number of samples in this array is given by the <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#af58d2a9bf164008581c03f9838d36610" title="Get the number of samples stored in the buffer. ">getSampleCount()</a> function.</p>
<dl class="section return"><dt>Returns</dt><dd>Read-only pointer to the array of sound samples</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#af58d2a9bf164008581c03f9838d36610" title="Get the number of samples stored in the buffer. ">getSampleCount</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ae20a3eb8d2a8f13d7dc2fcb32f3b318b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::SoundBuffer::loadFromFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from a file. </p>
<p>See the documentation of <a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a> for the list of supported formats.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path of the sound file to load</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading succeeded, false if it failed</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ad5a27f1cea00cc06878fbd2fa70c6cc1" title="Load the sound buffer from a file in memory. ">loadFromMemory</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5439b000bdf3cd465bfe87365ec656af" title="Load the sound buffer from a custom stream. ">loadFromStream</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae5989be4ecbc9e60b2e801dc64414d29" title="Load the sound buffer from an array of audio samples. ">loadFromSamples</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ac54eace6c7d90673d32d4b9f97c748a4" title="Save the sound buffer to an audio file. ">saveToFile</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ad5a27f1cea00cc06878fbd2fa70c6cc1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::SoundBuffer::loadFromMemory </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>sizeInBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from a file in memory. </p>
<p>See the documentation of <a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a> for the list of supported formats.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the file data in memory </td></tr>
    <tr><td class="paramname">sizeInBytes</td><td>Size of the data to load, in bytes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading succeeded, false if it failed</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b" title="Load the sound buffer from a file. ">loadFromFile</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#a5439b000bdf3cd465bfe87365ec656af" title="Load the sound buffer from a custom stream. ">loadFromStream</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae5989be4ecbc9e60b2e801dc64414d29" title="Load the sound buffer from an array of audio samples. ">loadFromSamples</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ae5989be4ecbc9e60b2e801dc64414d29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::SoundBuffer::loadFromSamples </td>
          <td>(</td>
          <td class="paramtype">const Int16 *&#160;</td>
          <td class="paramname"><em>samples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint64&#160;</td>
          <td class="paramname"><em>sampleCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>channelCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>sampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from an array of audio samples. </p>
<p>The assumed format of the audio samples is 16 bits signed integer (cpp3ds::Int16).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">samples</td><td>Pointer to the array of samples in memory </td></tr>
    <tr><td class="paramname">sampleCount</td><td>Number of samples in the array </td></tr>
    <tr><td class="paramname">channelCount</td><td>Number of channels (1 = mono, 2 = stereo, ...) </td></tr>
    <tr><td class="paramname">sampleRate</td><td>Sample rate (number of samples to play per second)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading succeeded, false if it failed</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b" title="Load the sound buffer from a file. ">loadFromFile</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ad5a27f1cea00cc06878fbd2fa70c6cc1" title="Load the sound buffer from a file in memory. ">loadFromMemory</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ac54eace6c7d90673d32d4b9f97c748a4" title="Save the sound buffer to an audio file. ">saveToFile</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a5439b000bdf3cd465bfe87365ec656af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::SoundBuffer::loadFromStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from a custom stream. </p>
<p>See the documentation of <a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a> for the list of supported formats.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Source stream to read from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading succeeded, false if it failed</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b" title="Load the sound buffer from a file. ">loadFromFile</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ad5a27f1cea00cc06878fbd2fa70c6cc1" title="Load the sound buffer from a file in memory. ">loadFromMemory</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae5989be4ecbc9e60b2e801dc64414d29" title="Load the sound buffer from an array of audio samples. ">loadFromSamples</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ab704bd89b3610efa19f7bbc488ccc0bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a>&amp; cpp3ds::SoundBuffer::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1SoundBuffer.htm">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">right</td><td>Instance to assign</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to self </dd></dl>

</div>
</div>
<a class="anchor" id="ac54eace6c7d90673d32d4b9f97c748a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::SoundBuffer::saveToFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save the sound buffer to an audio file. </p>
<p>See the documentation of <a class="el" href="classcpp3ds_1_1OutputSoundFile.htm" title="Provide write access to sound files. ">cpp3ds::OutputSoundFile</a> for the list of supported formats.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path of the sound file to write</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if saving succeeded, false if it failed</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae20a3eb8d2a8f13d7dc2fcb32f3b318b" title="Load the sound buffer from a file. ">loadFromFile</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ad5a27f1cea00cc06878fbd2fa70c6cc1" title="Load the sound buffer from a file in memory. ">loadFromMemory</a>, <a class="el" href="classcpp3ds_1_1SoundBuffer.htm#ae5989be4ecbc9e60b2e801dc64414d29" title="Load the sound buffer from an array of audio samples. ">loadFromSamples</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundBuffer_8hpp_source.htm">SoundBuffer.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
