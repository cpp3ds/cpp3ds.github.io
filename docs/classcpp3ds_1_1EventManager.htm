<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1EventManager.htm">EventManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1EventManager-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::EventManager Class Reference<div class="ingroups"><a class="el" href="group__window.htm">Window module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classcpp3ds_1_1EventManager.htm" title="cpp3ds::EventManager is used primarily by cpp3ds::Game for input/event management. ">cpp3ds::EventManager</a> is used primarily by <a class="el" href="classcpp3ds_1_1Game.htm" title="cpp3ds::Game example goes here ">cpp3ds::Game</a> for input/event management.  
 <a href="classcpp3ds_1_1EventManager.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="EventManager_8hpp_source.htm">EventManager.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a16a2cec2f98abae178fb824802bc7af8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1EventManager.htm#a16a2cec2f98abae178fb824802bc7af8">pollEvent</a> (<a class="el" href="classcpp3ds_1_1Event.htm">Event</a> &amp;event)</td></tr>
<tr class="memdesc:a16a2cec2f98abae178fb824802bc7af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pop the event on top of the event queue, if any, and return it.  <a href="#a16a2cec2f98abae178fb824802bc7af8">More...</a><br /></td></tr>
<tr class="separator:a16a2cec2f98abae178fb824802bc7af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af04b748cbbb3eaee7af13aa1310f14db"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1EventManager.htm#af04b748cbbb3eaee7af13aa1310f14db">waitEvent</a> (<a class="el" href="classcpp3ds_1_1Event.htm">Event</a> &amp;event)</td></tr>
<tr class="memdesc:af04b748cbbb3eaee7af13aa1310f14db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for an event and return it.  <a href="#af04b748cbbb3eaee7af13aa1310f14db">More...</a><br /></td></tr>
<tr class="separator:af04b748cbbb3eaee7af13aa1310f14db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a80d625ab6a675e2e74d3c3980171fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1EventManager.htm#a2a80d625ab6a675e2e74d3c3980171fc">setJoystickThreshold</a> (float threshold)</td></tr>
<tr class="memdesc:a2a80d625ab6a675e2e74d3c3980171fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the joystick threshold, ie.  <a href="#a2a80d625ab6a675e2e74d3c3980171fc">More...</a><br /></td></tr>
<tr class="separator:a2a80d625ab6a675e2e74d3c3980171fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classcpp3ds_1_1EventManager.htm" title="cpp3ds::EventManager is used primarily by cpp3ds::Game for input/event management. ">cpp3ds::EventManager</a> is used primarily by <a class="el" href="classcpp3ds_1_1Game.htm" title="cpp3ds::Game example goes here ">cpp3ds::Game</a> for input/event management. </p>
<p>Only useful for those planning on reimplementing <a class="el" href="classcpp3ds_1_1Game.htm" title="cpp3ds::Game example goes here ">cpp3ds::Game</a> for customized needs. </p>

<p>Definition at line <a class="el" href="EventManager_8hpp_source.htm#l00012">12</a> of file <a class="el" href="EventManager_8hpp_source.htm">EventManager.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a16a2cec2f98abae178fb824802bc7af8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::EventManager::pollEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Event.htm">Event</a> &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pop the event on top of the event queue, if any, and return it. </p>
<p>This function is not blocking: if there's no pending event then it will return false and leave <em>event</em> unmodified. Note that more than one event may be present in the event queue, thus you should always call this function in a loop to make sure that you process every pending event. </p><div class="fragment"><div class="line"><a class="code" href="classcpp3ds_1_1Event.htm">cpp3ds::Event</a> event;</div>
<div class="line"><span class="keywordflow">while</span> (cpp3ds::pollEvent(event))</div>
<div class="line">{</div>
<div class="line">   <span class="comment">// process event...</span></div>
<div class="line">}</div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td><a class="el" href="classcpp3ds_1_1Event.htm" title="Defines a system event and its parameters. ">Event</a> to be returned</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if an event was returned, or false if the event queue was empty</dd></dl>
<dl class="section see"><dt>See also</dt><dd>cpp3ds::waitEvent </dd></dl>

</div>
</div>
<a class="anchor" id="a2a80d625ab6a675e2e74d3c3980171fc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cpp3ds::EventManager::setJoystickThreshold </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>threshold</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the joystick threshold, ie. </p>
<p>the value below which no move event will be generated</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">threshold</td><td>: New threshold, in range [0, 100] </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af04b748cbbb3eaee7af13aa1310f14db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cpp3ds::EventManager::waitEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Event.htm">Event</a> &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait for an event and return it. </p>
<p>This function is blocking: if there's no pending event then it will wait until an event is received. After this function returns (and no error occured), the <em>event</em> object is always valid and filled properly. This function is typically used when you have a thread that is dedicated to events handling: you want to make this thread sleep as long as no new event is received. </p><div class="fragment"><div class="line"><a class="code" href="classcpp3ds_1_1Event.htm">cpp3ds::Event</a> event;</div>
<div class="line"><span class="keywordflow">if</span> (cpp3ds::waitEvent(event))</div>
<div class="line">{</div>
<div class="line">   <span class="comment">// process event...</span></div>
<div class="line">}</div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td><a class="el" href="classcpp3ds_1_1Event.htm" title="Defines a system event and its parameters. ">Event</a> to be returned</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if any error occured</dd></dl>
<dl class="section see"><dt>See also</dt><dd>cpp3ds::pollEvent </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="EventManager_8hpp_source.htm">EventManager.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
