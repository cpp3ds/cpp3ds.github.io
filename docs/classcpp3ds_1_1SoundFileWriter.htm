<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1SoundFileWriter.htm">SoundFileWriter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1SoundFileWriter-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::SoundFileWriter Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__audio.htm">Audio module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Abstract base class for sound file encoding.  
 <a href="classcpp3ds_1_1SoundFileWriter.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundFileWriter_8hpp_source.htm">SoundFileWriter.hpp</a>&gt;</code></p>

<p>Inherited by cpp3ds::priv::SoundFileWriterOgg, and cpp3ds::priv::SoundFileWriterWav.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afa47dd6d4a8c99a87d5578b36f30eb5d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileWriter.htm#afa47dd6d4a8c99a87d5578b36f30eb5d">~SoundFileWriter</a> ()</td></tr>
<tr class="memdesc:afa47dd6d4a8c99a87d5578b36f30eb5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#afa47dd6d4a8c99a87d5578b36f30eb5d">More...</a><br /></td></tr>
<tr class="separator:afa47dd6d4a8c99a87d5578b36f30eb5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb486b7ee201c8658ae7de784ed75a1f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileWriter.htm#adb486b7ee201c8658ae7de784ed75a1f">open</a> (const std::string &amp;filename, unsigned int sampleRate, unsigned int channelCount)=0</td></tr>
<tr class="memdesc:adb486b7ee201c8658ae7de784ed75a1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a sound file for writing.  <a href="#adb486b7ee201c8658ae7de784ed75a1f">More...</a><br /></td></tr>
<tr class="separator:adb486b7ee201c8658ae7de784ed75a1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfbade8f7e18bee9a2f3dad664156bd3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileWriter.htm#acfbade8f7e18bee9a2f3dad664156bd3">write</a> (const Int16 *samples, Uint64 count)=0</td></tr>
<tr class="memdesc:acfbade8f7e18bee9a2f3dad664156bd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write audio samples to the open file.  <a href="#acfbade8f7e18bee9a2f3dad664156bd3">More...</a><br /></td></tr>
<tr class="separator:acfbade8f7e18bee9a2f3dad664156bd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Abstract base class for sound file encoding. </p>
<p>This class allows users to write audio file formats not natively supported by cpp3ds, and thus extend the set of supported writable audio formats.</p>
<p>A valid sound file writer must override the open and write functions, as well as providing a static check function; the latter is used by cpp3ds to find a suitable writer for a given filename.</p>
<p>To register a new writer, use the <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9d362129230e41dd345e7868e821586a" title="Register a new writer. ">cpp3ds::SoundFileFactory::registerWriter</a> template function.</p>
<p>Usage example: </p><div class="fragment"><div class="line"><span class="keyword">class </span>MySoundFileWriter : <span class="keyword">public</span> <a class="code" href="classcpp3ds_1_1SoundFileWriter.htm">cpp3ds::SoundFileWriter</a></div>
<div class="line">{</div>
<div class="line"><span class="keyword">public</span>:</div>
<div class="line"></div>
<div class="line">    <span class="keyword">static</span> <span class="keywordtype">bool</span> check(<span class="keyword">const</span> std::string&amp; filename)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// typically, check the extension</span></div>
<div class="line">        <span class="comment">// return true if the writer can handle the format</span></div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1SoundFileWriter.htm#adb486b7ee201c8658ae7de784ed75a1f">open</a>(<span class="keyword">const</span> std::string&amp; filename, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> sampleRate, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channelCount)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// open the file &#39;filename&#39; for writing,</span></div>
<div class="line">        <span class="comment">// write the given sample rate and channel count to the file header</span></div>
<div class="line">        <span class="comment">// return true on success</span></div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1SoundFileWriter.htm#acfbade8f7e18bee9a2f3dad664156bd3">write</a>(<span class="keyword">const</span> cpp3ds::Int16* samples, cpp3ds::Uint64 count)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// write &#39;count&#39; samples stored at address &#39;samples&#39;,</span></div>
<div class="line">        <span class="comment">// convert them (for example to normalized float) if the format requires it</span></div>
<div class="line">    }</div>
<div class="line">};</div>
<div class="line"></div>
<div class="line">cpp3ds::SoundFileFactory::registerWriter&lt;MySoundFileWriter&gt;();</div>
</div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1OutputSoundFile.htm" title="Provide write access to sound files. ">cpp3ds::OutputSoundFile</a>, <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm" title="Manages and instantiates sound file readers and writers. ">cpp3ds::SoundFileFactory</a>, <a class="el" href="classcpp3ds_1_1SoundFileReader.htm" title="Abstract base class for sound file decoding. ">cpp3ds::SoundFileReader</a> </dd></dl>

<p>Definition at line <a class="el" href="SoundFileWriter_8hpp_source.htm#l00041">41</a> of file <a class="el" href="SoundFileWriter_8hpp_source.htm">SoundFileWriter.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="afa47dd6d4a8c99a87d5578b36f30eb5d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual cpp3ds::SoundFileWriter::~SoundFileWriter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

<p>Definition at line <a class="el" href="SoundFileWriter_8hpp_source.htm#l00049">49</a> of file <a class="el" href="SoundFileWriter_8hpp_source.htm">SoundFileWriter.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="adb486b7ee201c8658ae7de784ed75a1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool cpp3ds::SoundFileWriter::open </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>sampleRate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>channelCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Open a sound file for writing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path of the file to open </td></tr>
    <tr><td class="paramname">sampleRate</td><td>Sample rate of the sound </td></tr>
    <tr><td class="paramname">channelCount</td><td>Number of channels of the sound</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the file was successfully opened </dd></dl>

</div>
</div>
<a class="anchor" id="acfbade8f7e18bee9a2f3dad664156bd3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void cpp3ds::SoundFileWriter::write </td>
          <td>(</td>
          <td class="paramtype">const Int16 *&#160;</td>
          <td class="paramname"><em>samples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint64&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Write audio samples to the open file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">samples</td><td>Pointer to the sample array to write </td></tr>
    <tr><td class="paramname">count</td><td>Number of samples to write </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundFileWriter_8hpp_source.htm">SoundFileWriter.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
