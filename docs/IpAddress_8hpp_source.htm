<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_0b93ed46ee854382aab85c778b89946e.htm">include</a></li><li class="navelem"><a class="el" href="dir_18d409fe281a3b15bd325ab753ead42a.htm">cpp3ds</a></li><li class="navelem"><a class="el" href="dir_fced38657a416244b2be3c8c8a080720.htm">Network</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">IpAddress.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SFML - Simple and Fast Multimedia Library</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (C) 2007-2015 Laurent Gomila (laurent@sfml-dev.org)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// Permission is granted to anyone to use this software for any purpose,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// subject to the following restrictions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// 1. The origin of this software must not be misrepresented;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    you must not claim that you wrote the original software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//    If you use this software in a product, an acknowledgment</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//    in the product documentation would be appreciated but is not required.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// 2. Altered source versions must be plainly marked as such,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//    and must not be misrepresented as being the original software.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef CPP3DS_IPADDRESS_HPP</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define CPP3DS_IPADDRESS_HPP</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// Headers</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span><span class="preprocessor">#include &lt;cpp3ds/System/Time.hpp&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;istream&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacecpp3ds.htm">cpp3ds</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1IpAddress.htm">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">IpAddress</a>();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">IpAddress</a>(<span class="keyword">const</span> std::string&amp; address);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">IpAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* address);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">IpAddress</a>(Uint8 byte0, Uint8 byte1, Uint8 byte2, Uint8 byte3);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">IpAddress</a>(Uint32 address);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    std::string <a class="code" href="classcpp3ds_1_1IpAddress.htm#af138a4de0947e66daa45b284ea282cb8">toString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    Uint32 <a class="code" href="classcpp3ds_1_1IpAddress.htm#a431a0410f4cd86eae0781fd7158571f4">toInteger</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">static</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a> <a class="code" href="classcpp3ds_1_1IpAddress.htm#aa8a40578d9de7b05fd441dd5a49c3cc5">getLocalAddress</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">static</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a> <a class="code" href="classcpp3ds_1_1IpAddress.htm#a148a3be280cfe402467d78e2629145ec">getPublicAddress</a>(<a class="code" href="classcpp3ds_1_1Time.htm">Time</a> timeout = <a class="code" href="classcpp3ds_1_1Time.htm#aa51aba4b5fcb6735dd44042fad1f0a8e">Time::Zero</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Static member data</span></div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1IpAddress.htm#ab1def12e79ecf113a0006ba9ac8f1b5e">  183</a></span>&#160;<span class="comment"></span>    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a> <a class="code" href="classcpp3ds_1_1IpAddress.htm#ab1def12e79ecf113a0006ba9ac8f1b5e">None</a>;      </div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1IpAddress.htm#ae96039a7dcb293d100df543dfb4efc5e">  184</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a> <a class="code" href="classcpp3ds_1_1IpAddress.htm#ae96039a7dcb293d100df543dfb4efc5e">LocalHost</a>; </div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1IpAddress.htm#a931fd389376cb728dda6e3446df8312b">  185</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a> <a class="code" href="classcpp3ds_1_1IpAddress.htm#a931fd389376cb728dda6e3446df8312b">Broadcast</a>; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Member data</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span>    Uint32 m_address; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;};</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordtype">bool</span> operator ==(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">bool</span> operator !=(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">bool</span> operator &lt;(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keywordtype">bool</span> operator &gt;(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordtype">bool</span> operator &lt;=(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keywordtype">bool</span> operator &gt;=(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; right);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;std::istream&amp; operator &gt;&gt;(std::istream&amp; stream, <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; address);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;std::ostream&amp; operator &lt;&lt;(std::ostream&amp; stream, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1IpAddress.htm">IpAddress</a>&amp; address);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;} <span class="comment">// namespace cpp3ds</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#endif // CPP3DS_IPADDRESS_HPP</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm">cpp3ds::IpAddress</a></div><div class="ttdoc">Encapsulate an IPv4 network address. </div><div class="ttdef"><b>Definition:</b> <a href="IpAddress_8hpp_source.htm#l00043">IpAddress.hpp:43</a></div></div>
<div class="ttc" id="namespacecpp3ds_htm"><div class="ttname"><a href="namespacecpp3ds.htm">cpp3ds</a></div><div class="ttdef"><b>Definition:</b> <a href="AlResource_8hpp_source.htm#l00033">AlResource.hpp:33</a></div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_a431a0410f4cd86eae0781fd7158571f4"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#a431a0410f4cd86eae0781fd7158571f4">cpp3ds::IpAddress::toInteger</a></div><div class="ttdeci">Uint32 toInteger() const </div><div class="ttdoc">Get an integer representation of the address. </div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_ab1def12e79ecf113a0006ba9ac8f1b5e"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#ab1def12e79ecf113a0006ba9ac8f1b5e">cpp3ds::IpAddress::None</a></div><div class="ttdeci">static const IpAddress None</div><div class="ttdoc">Value representing an empty/invalid address. </div><div class="ttdef"><b>Definition:</b> <a href="IpAddress_8hpp_source.htm#l00183">IpAddress.hpp:183</a></div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_af138a4de0947e66daa45b284ea282cb8"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#af138a4de0947e66daa45b284ea282cb8">cpp3ds::IpAddress::toString</a></div><div class="ttdeci">std::string toString() const </div><div class="ttdoc">Get a string representation of the address. </div></div>
<div class="ttc" id="classcpp3ds_1_1Time_htm"><div class="ttname"><a href="classcpp3ds_1_1Time.htm">cpp3ds::Time</a></div><div class="ttdoc">Represents a time value. </div><div class="ttdef"><b>Definition:</b> <a href="Time_8hpp_source.htm#l00037">Time.hpp:37</a></div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_a931fd389376cb728dda6e3446df8312b"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#a931fd389376cb728dda6e3446df8312b">cpp3ds::IpAddress::Broadcast</a></div><div class="ttdeci">static const IpAddress Broadcast</div><div class="ttdoc">The "broadcast" address (for sending UDP messages to everyone on a local network) ...</div><div class="ttdef"><b>Definition:</b> <a href="IpAddress_8hpp_source.htm#l00185">IpAddress.hpp:185</a></div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_ad7dd1e494a20648d93b59dd98b30da5a"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#ad7dd1e494a20648d93b59dd98b30da5a">cpp3ds::IpAddress::IpAddress</a></div><div class="ttdeci">IpAddress()</div><div class="ttdoc">Default constructor. </div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_ae96039a7dcb293d100df543dfb4efc5e"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#ae96039a7dcb293d100df543dfb4efc5e">cpp3ds::IpAddress::LocalHost</a></div><div class="ttdeci">static const IpAddress LocalHost</div><div class="ttdoc">The "localhost" address (for connecting a computer to itself locally) </div><div class="ttdef"><b>Definition:</b> <a href="IpAddress_8hpp_source.htm#l00184">IpAddress.hpp:184</a></div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_a148a3be280cfe402467d78e2629145ec"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#a148a3be280cfe402467d78e2629145ec">cpp3ds::IpAddress::getPublicAddress</a></div><div class="ttdeci">static IpAddress getPublicAddress(Time timeout=Time::Zero)</div><div class="ttdoc">Get the computer&#39;s public address. </div></div>
<div class="ttc" id="classcpp3ds_1_1IpAddress_htm_aa8a40578d9de7b05fd441dd5a49c3cc5"><div class="ttname"><a href="classcpp3ds_1_1IpAddress.htm#aa8a40578d9de7b05fd441dd5a49c3cc5">cpp3ds::IpAddress::getLocalAddress</a></div><div class="ttdeci">static IpAddress getLocalAddress()</div><div class="ttdoc">Get the computer&#39;s local address. </div></div>
<div class="ttc" id="classcpp3ds_1_1Time_htm_aa51aba4b5fcb6735dd44042fad1f0a8e"><div class="ttname"><a href="classcpp3ds_1_1Time.htm#aa51aba4b5fcb6735dd44042fad1f0a8e">cpp3ds::Time::Zero</a></div><div class="ttdeci">static const Time Zero</div><div class="ttdoc">Predefined "zero" time value. </div><div class="ttdef"><b>Definition:</b> <a href="Time_8hpp_source.htm#l00082">Time.hpp:82</a></div></div>
</div><!-- fragment --></div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
