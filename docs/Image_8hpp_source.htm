<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_0b93ed46ee854382aab85c778b89946e.htm">include</a></li><li class="navelem"><a class="el" href="dir_18d409fe281a3b15bd325ab753ead42a.htm">cpp3ds</a></li><li class="navelem"><a class="el" href="dir_085c8d0c91fa2f9d2c1c5ade258c60f9.htm">Graphics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Image.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SFML - Simple and Fast Multimedia Library</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (C) 2007-2014 Laurent Gomila (laurent.gom@gmail.com)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// Permission is granted to anyone to use this software for any purpose,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// subject to the following restrictions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// 1. The origin of this software must not be misrepresented;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    you must not claim that you wrote the original software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//    If you use this software in a product, an acknowledgment</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//    in the product documentation would be appreciated but is not required.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// 2. Altered source versions must be plainly marked as such,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//    and must not be misrepresented as being the original software.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef CPP3DS_IMAGE_HPP</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define CPP3DS_IMAGE_HPP</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// Headers</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span><span class="preprocessor">#include &lt;cpp3ds/Graphics/Color.hpp&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;cpp3ds/Graphics/Rect.hpp&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacecpp3ds.htm">cpp3ds</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">class </span>InputStream;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classcpp3ds_1_1Image.htm">   45</a></span>&#160;<span class="keyword">class </span><a class="code" href="classcpp3ds_1_1Image.htm">Image</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span> :</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classcpp3ds_1_1Image.htm#a4c82adf30cc46e31274d6e39c98c4e84">Image</a>();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classcpp3ds_1_1Image.htm#ad277abba9f67d0c33b9f54c4602b0d05">~Image</a>();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#abd308ae271127efc1de9e48d73403576">create</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1Color.htm">Color</a>&amp; color = <a class="code" href="classcpp3ds_1_1Color.htm">Color</a>(0, 0, 0));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#abd308ae271127efc1de9e48d73403576">create</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height, <span class="keyword">const</span> Uint8* pixels);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1Image.htm#a676a3e55ab341d2feb92fe44025e59ba">loadFromFile</a>(<span class="keyword">const</span> std::string&amp; filename);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1Image.htm#ab44dc1442ae3607b188e550d474a2527">loadFromMemory</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* data, std::size_t size);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1Image.htm#a239d8557d42fe04f7e80a7875ccf56e2">loadFromStream</a>(<a class="code" href="classcpp3ds_1_1InputStream.htm">InputStream</a>&amp; stream);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1Image.htm#aa48da08437fe100acfe8263b4573b838">saveToFile</a>(<span class="keyword">const</span> std::string&amp; filename) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classcpp3ds_1_1Vector2.htm">Vector2u</a> <a class="code" href="classcpp3ds_1_1Image.htm#aaad0a9970e7a8946e63ac4e9147214ef">getSize</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#a621a81abbbb74c558450b6d0aa7ecb2c">createMaskFromColor</a>(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1Color.htm">Color</a>&amp; color, Uint8 alpha = 0);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#a89c9bff6215b33d10e63723e87eaca8f">copy</a>(<span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1Image.htm">Image</a>&amp; source, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> destX, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> destY, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1Rect.htm">IntRect</a>&amp; sourceRect = <a class="code" href="classcpp3ds_1_1Rect.htm">IntRect</a>(0, 0, 0, 0), <span class="keywordtype">bool</span> applyAlpha = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#a3a8d202c0771dd86a7d80682090782b4">setPixel</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> x, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> y, <span class="keyword">const</span> <a class="code" href="classcpp3ds_1_1Color.htm">Color</a>&amp; color);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classcpp3ds_1_1Color.htm">Color</a> <a class="code" href="classcpp3ds_1_1Image.htm#aa960aa7535036c9bfd73ccf6ba3e0366">getPixel</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> x, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> y) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">const</span> Uint8* <a class="code" href="classcpp3ds_1_1Image.htm#af935e67f7c8702cdf9a3018d7845b5e9">getPixelsPtr</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#aaa697519cbd3280d4bc1a7cb07de3fa1">flipHorizontally</a>();</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1Image.htm#aaa452c56faa22929d9330a6a6d0b9cdd">flipVertically</a>();</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">private</span> :</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Member data</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"></span>    <a class="code" href="classcpp3ds_1_1Vector2.htm">Vector2u</a>           m_size;   </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    std::vector&lt;Uint8&gt; m_pixels; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;};</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_ad277abba9f67d0c33b9f54c4602b0d05"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#ad277abba9f67d0c33b9f54c4602b0d05">cpp3ds::Image::~Image</a></div><div class="ttdeci">~Image()</div><div class="ttdoc">Destructor. </div></div>
<div class="ttc" id="classcpp3ds_1_1Rect_htm"><div class="ttname"><a href="classcpp3ds_1_1Rect.htm">cpp3ds::Rect&lt; int &gt;</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a3a8d202c0771dd86a7d80682090782b4"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a3a8d202c0771dd86a7d80682090782b4">cpp3ds::Image::setPixel</a></div><div class="ttdeci">void setPixel(unsigned int x, unsigned int y, const Color &amp;color)</div><div class="ttdoc">Change the color of a pixel. </div></div>
<div class="ttc" id="classcpp3ds_1_1InputStream_htm"><div class="ttname"><a href="classcpp3ds_1_1InputStream.htm">cpp3ds::InputStream</a></div><div class="ttdoc">Abstract class for custom file input streams. </div><div class="ttdef"><b>Definition:</b> <a href="InputStream_8hpp_source.htm#l00040">InputStream.hpp:40</a></div></div>
<div class="ttc" id="namespacecpp3ds_htm"><div class="ttname"><a href="namespacecpp3ds.htm">cpp3ds</a></div><div class="ttdef"><b>Definition:</b> <a href="AlResource_8hpp_source.htm#l00033">AlResource.hpp:33</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_aa960aa7535036c9bfd73ccf6ba3e0366"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#aa960aa7535036c9bfd73ccf6ba3e0366">cpp3ds::Image::getPixel</a></div><div class="ttdeci">Color getPixel(unsigned int x, unsigned int y) const </div><div class="ttdoc">Get the color of a pixel. </div></div>
<div class="ttc" id="classcpp3ds_1_1Color_htm"><div class="ttname"><a href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a></div><div class="ttdoc">Utility class for manpulating RGBA colors. </div><div class="ttdef"><b>Definition:</b> <a href="Color_8hpp_source.htm#l00036">Color.hpp:36</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a239d8557d42fe04f7e80a7875ccf56e2"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a239d8557d42fe04f7e80a7875ccf56e2">cpp3ds::Image::loadFromStream</a></div><div class="ttdeci">bool loadFromStream(InputStream &amp;stream)</div><div class="ttdoc">Load the image from a custom stream. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a676a3e55ab341d2feb92fe44025e59ba"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a676a3e55ab341d2feb92fe44025e59ba">cpp3ds::Image::loadFromFile</a></div><div class="ttdeci">bool loadFromFile(const std::string &amp;filename)</div><div class="ttdoc">Load the image from a file on disk. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a89c9bff6215b33d10e63723e87eaca8f"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a89c9bff6215b33d10e63723e87eaca8f">cpp3ds::Image::copy</a></div><div class="ttdeci">void copy(const Image &amp;source, unsigned int destX, unsigned int destY, const IntRect &amp;sourceRect=IntRect(0, 0, 0, 0), bool applyAlpha=false)</div><div class="ttdoc">Copy pixels from another image onto this one. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_ab44dc1442ae3607b188e550d474a2527"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#ab44dc1442ae3607b188e550d474a2527">cpp3ds::Image::loadFromMemory</a></div><div class="ttdeci">bool loadFromMemory(const void *data, std::size_t size)</div><div class="ttdoc">Load the image from a file in memory. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_aaa697519cbd3280d4bc1a7cb07de3fa1"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#aaa697519cbd3280d4bc1a7cb07de3fa1">cpp3ds::Image::flipHorizontally</a></div><div class="ttdeci">void flipHorizontally()</div><div class="ttdoc">Flip the image horizontally (left <-> right) </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_af935e67f7c8702cdf9a3018d7845b5e9"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#af935e67f7c8702cdf9a3018d7845b5e9">cpp3ds::Image::getPixelsPtr</a></div><div class="ttdeci">const Uint8 * getPixelsPtr() const </div><div class="ttdoc">Get a read-only pointer to the array of pixels. </div></div>
<div class="ttc" id="classcpp3ds_1_1Vector2_htm"><div class="ttname"><a href="classcpp3ds_1_1Vector2.htm">cpp3ds::Vector2&lt; unsigned int &gt;</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_aa48da08437fe100acfe8263b4573b838"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#aa48da08437fe100acfe8263b4573b838">cpp3ds::Image::saveToFile</a></div><div class="ttdeci">bool saveToFile(const std::string &amp;filename) const </div><div class="ttdoc">Save the image to a file on disk. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm"><div class="ttname"><a href="classcpp3ds_1_1Image.htm">cpp3ds::Image</a></div><div class="ttdoc">Class for loading, manipulating and saving images. </div><div class="ttdef"><b>Definition:</b> <a href="Image_8hpp_source.htm#l00045">Image.hpp:45</a></div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a4c82adf30cc46e31274d6e39c98c4e84"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a4c82adf30cc46e31274d6e39c98c4e84">cpp3ds::Image::Image</a></div><div class="ttdeci">Image()</div><div class="ttdoc">Default constructor. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_aaad0a9970e7a8946e63ac4e9147214ef"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#aaad0a9970e7a8946e63ac4e9147214ef">cpp3ds::Image::getSize</a></div><div class="ttdeci">Vector2u getSize() const </div><div class="ttdoc">Return the size (width and height) of the image. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_aaa452c56faa22929d9330a6a6d0b9cdd"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#aaa452c56faa22929d9330a6a6d0b9cdd">cpp3ds::Image::flipVertically</a></div><div class="ttdeci">void flipVertically()</div><div class="ttdoc">Flip the image vertically (top <-> bottom) </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_a621a81abbbb74c558450b6d0aa7ecb2c"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#a621a81abbbb74c558450b6d0aa7ecb2c">cpp3ds::Image::createMaskFromColor</a></div><div class="ttdeci">void createMaskFromColor(const Color &amp;color, Uint8 alpha=0)</div><div class="ttdoc">Create a transparency mask from a specified color-key. </div></div>
<div class="ttc" id="classcpp3ds_1_1Image_htm_abd308ae271127efc1de9e48d73403576"><div class="ttname"><a href="classcpp3ds_1_1Image.htm#abd308ae271127efc1de9e48d73403576">cpp3ds::Image::create</a></div><div class="ttdeci">void create(unsigned int width, unsigned int height, const Color &amp;color=Color(0, 0, 0))</div><div class="ttdoc">Create the image and fill it with a unique color. </div></div>
</div><!-- fragment --></div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
