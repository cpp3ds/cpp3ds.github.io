<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#related">Related Functions</a> &#124;
<a href="classcpp3ds_1_1Color-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::Color Class Reference<div class="ingroups"><a class="el" href="group__graphics.htm">Graphics module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Utility class for manpulating RGBA colors.  
 <a href="classcpp3ds_1_1Color.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Color_8hpp_source.htm">Color.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a72e540e02e2873d81085ce271bde1e8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a72e540e02e2873d81085ce271bde1e8d">Color</a> ()</td></tr>
<tr class="memdesc:a72e540e02e2873d81085ce271bde1e8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a72e540e02e2873d81085ce271bde1e8d">More...</a><br /></td></tr>
<tr class="separator:a72e540e02e2873d81085ce271bde1e8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795f36788ed99c23fe940f671bf85ed9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a795f36788ed99c23fe940f671bf85ed9">Color</a> (Uint8 red, Uint8 green, Uint8 blue, Uint8 alpha=255)</td></tr>
<tr class="memdesc:a795f36788ed99c23fe940f671bf85ed9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the color from its 4 RGBA components.  <a href="#a795f36788ed99c23fe940f671bf85ed9">More...</a><br /></td></tr>
<tr class="separator:a795f36788ed99c23fe940f671bf85ed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aef88cb935a07e2b2007c611642d6a68e"><td class="memItemLeft" align="right" valign="top">Uint8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#aef88cb935a07e2b2007c611642d6a68e">r</a></td></tr>
<tr class="memdesc:aef88cb935a07e2b2007c611642d6a68e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Red component.  <a href="#aef88cb935a07e2b2007c611642d6a68e">More...</a><br /></td></tr>
<tr class="separator:aef88cb935a07e2b2007c611642d6a68e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a751166aae546288ec48db21b98dcb5d9"><td class="memItemLeft" align="right" valign="top">Uint8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a751166aae546288ec48db21b98dcb5d9">g</a></td></tr>
<tr class="memdesc:a751166aae546288ec48db21b98dcb5d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Green component.  <a href="#a751166aae546288ec48db21b98dcb5d9">More...</a><br /></td></tr>
<tr class="separator:a751166aae546288ec48db21b98dcb5d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af44ae086a9c52402fc2fedeba9d5f475"><td class="memItemLeft" align="right" valign="top">Uint8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#af44ae086a9c52402fc2fedeba9d5f475">b</a></td></tr>
<tr class="memdesc:af44ae086a9c52402fc2fedeba9d5f475"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blue component.  <a href="#af44ae086a9c52402fc2fedeba9d5f475">More...</a><br /></td></tr>
<tr class="separator:af44ae086a9c52402fc2fedeba9d5f475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3d4ccd0283aaf024e2f90e9c3619c3d"><td class="memItemLeft" align="right" valign="top">Uint8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#aa3d4ccd0283aaf024e2f90e9c3619c3d">a</a></td></tr>
<tr class="memdesc:aa3d4ccd0283aaf024e2f90e9c3619c3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alpha (opacity) component.  <a href="#aa3d4ccd0283aaf024e2f90e9c3619c3d">More...</a><br /></td></tr>
<tr class="separator:aa3d4ccd0283aaf024e2f90e9c3619c3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:aa5c8bc21f9bbad1ae855ee56fbc98d1b"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#aa5c8bc21f9bbad1ae855ee56fbc98d1b">Black</a></td></tr>
<tr class="memdesc:aa5c8bc21f9bbad1ae855ee56fbc98d1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Black predefined color.  <a href="#aa5c8bc21f9bbad1ae855ee56fbc98d1b">More...</a><br /></td></tr>
<tr class="separator:aa5c8bc21f9bbad1ae855ee56fbc98d1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b45ce75600409e62137f4249f896ad"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a14b45ce75600409e62137f4249f896ad">White</a></td></tr>
<tr class="memdesc:a14b45ce75600409e62137f4249f896ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">White predefined color.  <a href="#a14b45ce75600409e62137f4249f896ad">More...</a><br /></td></tr>
<tr class="separator:a14b45ce75600409e62137f4249f896ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2449b6c287f9ade9b90081b3b28b0e75"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a2449b6c287f9ade9b90081b3b28b0e75">Red</a></td></tr>
<tr class="memdesc:a2449b6c287f9ade9b90081b3b28b0e75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Red predefined color.  <a href="#a2449b6c287f9ade9b90081b3b28b0e75">More...</a><br /></td></tr>
<tr class="separator:a2449b6c287f9ade9b90081b3b28b0e75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d578a90e3371f8b39d189456330d5c7"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a5d578a90e3371f8b39d189456330d5c7">Green</a></td></tr>
<tr class="memdesc:a5d578a90e3371f8b39d189456330d5c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Green predefined color.  <a href="#a5d578a90e3371f8b39d189456330d5c7">More...</a><br /></td></tr>
<tr class="separator:a5d578a90e3371f8b39d189456330d5c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af234e68a9963f5e7cfe81b3697763171"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#af234e68a9963f5e7cfe81b3697763171">Blue</a></td></tr>
<tr class="memdesc:af234e68a9963f5e7cfe81b3697763171"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blue predefined color.  <a href="#af234e68a9963f5e7cfe81b3697763171">More...</a><br /></td></tr>
<tr class="separator:af234e68a9963f5e7cfe81b3697763171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2042d097c0896577855ab00a79f8034"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#aa2042d097c0896577855ab00a79f8034">Yellow</a></td></tr>
<tr class="memdesc:aa2042d097c0896577855ab00a79f8034"><td class="mdescLeft">&#160;</td><td class="mdescRight">Yellow predefined color.  <a href="#aa2042d097c0896577855ab00a79f8034">More...</a><br /></td></tr>
<tr class="separator:aa2042d097c0896577855ab00a79f8034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad623bc17741fd6411c8e8263d74f0b2f"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#ad623bc17741fd6411c8e8263d74f0b2f">Magenta</a></td></tr>
<tr class="memdesc:ad623bc17741fd6411c8e8263d74f0b2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Magenta predefined color.  <a href="#ad623bc17741fd6411c8e8263d74f0b2f">More...</a><br /></td></tr>
<tr class="separator:ad623bc17741fd6411c8e8263d74f0b2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7b083c13e28c8aa136adfcb150cd47"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a6b7b083c13e28c8aa136adfcb150cd47">Cyan</a></td></tr>
<tr class="memdesc:a6b7b083c13e28c8aa136adfcb150cd47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cyan predefined color.  <a href="#a6b7b083c13e28c8aa136adfcb150cd47">More...</a><br /></td></tr>
<tr class="separator:a6b7b083c13e28c8aa136adfcb150cd47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94a9592b72d65af716cf730f016dbe4e"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a94a9592b72d65af716cf730f016dbe4e">Transparent</a></td></tr>
<tr class="memdesc:a94a9592b72d65af716cf730f016dbe4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transparent (black) predefined color.  <a href="#a94a9592b72d65af716cf730f016dbe4e">More...</a><br /></td></tr>
<tr class="separator:a94a9592b72d65af716cf730f016dbe4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="related"></a>
Related Functions</h2></td></tr>
<tr><td class="ititle" colspan="2"><p>(Note that these are not member functions.) </p>
</td></tr>
<tr class="memitem:a2adc3f68860f7aa5e4d7c79dcbb31d30"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a2adc3f68860f7aa5e4d7c79dcbb31d30">operator==</a> (const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a2adc3f68860f7aa5e4d7c79dcbb31d30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the == operator.  <a href="#a2adc3f68860f7aa5e4d7c79dcbb31d30">More...</a><br /></td></tr>
<tr class="separator:a2adc3f68860f7aa5e4d7c79dcbb31d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394c3495753c4b17f9cd45556ef00b8c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a394c3495753c4b17f9cd45556ef00b8c">operator!=</a> (const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a394c3495753c4b17f9cd45556ef00b8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the != operator.  <a href="#a394c3495753c4b17f9cd45556ef00b8c">More...</a><br /></td></tr>
<tr class="separator:a394c3495753c4b17f9cd45556ef00b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0355ba6bfd2f83ffd8f8fafdca26cdd0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a0355ba6bfd2f83ffd8f8fafdca26cdd0">operator+</a> (const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a0355ba6bfd2f83ffd8f8fafdca26cdd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary + operator.  <a href="#a0355ba6bfd2f83ffd8f8fafdca26cdd0">More...</a><br /></td></tr>
<tr class="separator:a0355ba6bfd2f83ffd8f8fafdca26cdd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4586e31d668f183fc46576511169bf2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a4586e31d668f183fc46576511169bf2c">operator-</a> (const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a4586e31d668f183fc46576511169bf2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary - operator.  <a href="#a4586e31d668f183fc46576511169bf2c">More...</a><br /></td></tr>
<tr class="separator:a4586e31d668f183fc46576511169bf2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bae779fb49bb92dbf820a65e45a6602"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a1bae779fb49bb92dbf820a65e45a6602">operator*</a> (const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a1bae779fb49bb92dbf820a65e45a6602"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary * operator.  <a href="#a1bae779fb49bb92dbf820a65e45a6602">More...</a><br /></td></tr>
<tr class="separator:a1bae779fb49bb92dbf820a65e45a6602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af39790b2e677c9ab418787f5ff4583ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#af39790b2e677c9ab418787f5ff4583ef">operator+=</a> (<a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:af39790b2e677c9ab418787f5ff4583ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary += operator.  <a href="#af39790b2e677c9ab418787f5ff4583ef">More...</a><br /></td></tr>
<tr class="separator:af39790b2e677c9ab418787f5ff4583ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6927a7dba8b0d330f912fefb43b0c148"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a6927a7dba8b0d330f912fefb43b0c148">operator-=</a> (<a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a6927a7dba8b0d330f912fefb43b0c148"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary -= operator.  <a href="#a6927a7dba8b0d330f912fefb43b0c148">More...</a><br /></td></tr>
<tr class="separator:a6927a7dba8b0d330f912fefb43b0c148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d1ea2b9bd5dbe29bb2e54feba9b4b38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1Color.htm#a7d1ea2b9bd5dbe29bb2e54feba9b4b38">operator*=</a> (<a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;left, const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;right)</td></tr>
<tr class="memdesc:a7d1ea2b9bd5dbe29bb2e54feba9b4b38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of the binary *= operator.  <a href="#a7d1ea2b9bd5dbe29bb2e54feba9b4b38">More...</a><br /></td></tr>
<tr class="separator:a7d1ea2b9bd5dbe29bb2e54feba9b4b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Utility class for manpulating RGBA colors. </p>
<p><a class="el" href="classcpp3ds_1_1Color.htm" title="Utility class for manpulating RGBA colors. ">cpp3ds::Color</a> is a simple color class composed of 4 components:</p>
<ul>
<li>Red </li>
<li>Green </li>
<li>Blue </li>
<li>Alpha (opacity)</li>
</ul>
<p>Each component is a public member, an unsigned integer in the range [0, 255]. Thus, colors can be constructed and manipulated very easily:</p>
<div class="fragment"><div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> color(255, 0, 0); <span class="comment">// red</span></div>
<div class="line">color.r = 0;                <span class="comment">// make it black</span></div>
<div class="line">color.b = 128;              <span class="comment">// make it dark blue</span></div>
</div><!-- fragment --><p>The fourth component of colors, named "alpha", represents the opacity of the color. A color with an alpha value of 255 will be fully opaque, while an alpha value of 0 will make a color fully transparent, whatever the value of the other components is.</p>
<p>The most common colors are already defined as static variables: </p><div class="fragment"><div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> black       = <a class="code" href="classcpp3ds_1_1Color.htm#aa5c8bc21f9bbad1ae855ee56fbc98d1b">cpp3ds::Color::Black</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> white       = <a class="code" href="classcpp3ds_1_1Color.htm#a14b45ce75600409e62137f4249f896ad">cpp3ds::Color::White</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> red         = <a class="code" href="classcpp3ds_1_1Color.htm#a2449b6c287f9ade9b90081b3b28b0e75">cpp3ds::Color::Red</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> green       = <a class="code" href="classcpp3ds_1_1Color.htm#a5d578a90e3371f8b39d189456330d5c7">cpp3ds::Color::Green</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> blue        = <a class="code" href="classcpp3ds_1_1Color.htm#af234e68a9963f5e7cfe81b3697763171">cpp3ds::Color::Blue</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> yellow      = <a class="code" href="classcpp3ds_1_1Color.htm#aa2042d097c0896577855ab00a79f8034">cpp3ds::Color::Yellow</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> magenta     = <a class="code" href="classcpp3ds_1_1Color.htm#ad623bc17741fd6411c8e8263d74f0b2f">cpp3ds::Color::Magenta</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> cyan        = <a class="code" href="classcpp3ds_1_1Color.htm#a6b7b083c13e28c8aa136adfcb150cd47">cpp3ds::Color::Cyan</a>;</div>
<div class="line"><a class="code" href="classcpp3ds_1_1Color.htm">cpp3ds::Color</a> transparent = <a class="code" href="classcpp3ds_1_1Color.htm#a94a9592b72d65af716cf730f016dbe4e">cpp3ds::Color::Transparent</a>;</div>
</div><!-- fragment --><p>Colors can also be added and modulated (multiplied) using the overloaded operators + and *. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00036">36</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a72e540e02e2873d81085ce271bde1e8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::Color::Color </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>Constructs an opaque black color. It is equivalent to <a class="el" href="classcpp3ds_1_1Color.htm" title="Utility class for manpulating RGBA colors. ">cpp3ds::Color(0, 0, 0, 255)</a>. </p>

</div>
</div>
<a class="anchor" id="a795f36788ed99c23fe940f671bf85ed9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cpp3ds::Color::Color </td>
          <td>(</td>
          <td class="paramtype">Uint8&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint8&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint8&#160;</td>
          <td class="paramname"><em>blue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint8&#160;</td>
          <td class="paramname"><em>alpha</em> = <code>255</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct the color from its 4 RGBA components. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>Red component (in the range [0, 255]) </td></tr>
    <tr><td class="paramname">green</td><td>Green component (in the range [0, 255]) </td></tr>
    <tr><td class="paramname">blue</td><td>Blue component (in the range [0, 255]) </td></tr>
    <tr><td class="paramname">alpha</td><td>Alpha (opacity) component (in the range [0, 255]) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a394c3495753c4b17f9cd45556ef00b8c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the != operator. </p>
<p>This operator compares two colors and check if they are different.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if colors are different, false if they are equal </dd></dl>

</div>
</div>
<a class="anchor" id="a1bae779fb49bb92dbf820a65e45a6602"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary * operator. </p>
<p>This operator returns the component-wise multiplication (also called "modulation") of two colors. Components are then divided by 255 so that the result is still in the range [0, 255].</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result of <em>left</em> * <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a7d1ea2b9bd5dbe29bb2e54feba9b4b38"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp; operator*= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary *= operator. </p>
<p>This operator returns the component-wise multiplication (also called "modulation") of two colors, and assigns the result to the left operand. Components are then divided by 255 so that the result is still in the range [0, 255].</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to <em>left</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a0355ba6bfd2f83ffd8f8fafdca26cdd0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary + operator. </p>
<p>This operator returns the component-wise sum of two colors. Components that exceed 255 are clamped to 255.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result of <em>left</em> + <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="af39790b2e677c9ab418787f5ff4583ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp; operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary += operator. </p>
<p>This operator computes the component-wise sum of two colors, and assigns the result to the left operand. Components that exceed 255 are clamped to 255.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to <em>left</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a4586e31d668f183fc46576511169bf2c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary - operator. </p>
<p>This operator returns the component-wise subtraction of two colors. Components below 0 are clamped to 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result of <em>left</em> - <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a6927a7dba8b0d330f912fefb43b0c148"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp; operator-= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the binary -= operator. </p>
<p>This operator computes the component-wise subtraction of two colors, and assigns the result to the left operand. Components below 0 are clamped to 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to <em>left</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a2adc3f68860f7aa5e4d7c79dcbb31d30"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">related</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overload of the == operator. </p>
<p>This operator compares two colors and check if they are equal.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand </td></tr>
    <tr><td class="paramname">right</td><td>Right operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if colors are equal, false if they are different </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aa3d4ccd0283aaf024e2f90e9c3619c3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Uint8 cpp3ds::Color::a</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Alpha (opacity) component. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00079">79</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="af44ae086a9c52402fc2fedeba9d5f475"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Uint8 cpp3ds::Color::b</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Blue component. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00078">78</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa5c8bc21f9bbad1ae855ee56fbc98d1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Black</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Black predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00063">63</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="af234e68a9963f5e7cfe81b3697763171"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Blue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Blue predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00067">67</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6b7b083c13e28c8aa136adfcb150cd47"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Cyan</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Cyan predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00070">70</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a751166aae546288ec48db21b98dcb5d9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Uint8 cpp3ds::Color::g</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Green component. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00077">77</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5d578a90e3371f8b39d189456330d5c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Green</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Green predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00066">66</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad623bc17741fd6411c8e8263d74f0b2f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Magenta</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Magenta predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00069">69</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aef88cb935a07e2b2007c611642d6a68e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Uint8 cpp3ds::Color::r</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Red component. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00076">76</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2449b6c287f9ade9b90081b3b28b0e75"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Red</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Red predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00065">65</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a94a9592b72d65af716cf730f016dbe4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Transparent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transparent (black) predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00071">71</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a14b45ce75600409e62137f4249f896ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::White</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>White predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00064">64</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa2042d097c0896577855ab00a79f8034"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classcpp3ds_1_1Color.htm">Color</a> cpp3ds::Color::Yellow</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Yellow predefined color. </p>

<p>Definition at line <a class="el" href="Color_8hpp_source.htm#l00068">68</a> of file <a class="el" href="Color_8hpp_source.htm">Color.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Color_8hpp_source.htm">Color.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
