<!doctype html>
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>cpp3ds &middot; Documentation</title>
		<link rel="stylesheet" href="../css/app.css" />
		<link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
		<script src="../bower_components/modernizr/modernizr.js"></script>
	</head>
	<body>
		 <div id="topnav" class="text-center">
				<dl class="sub-nav">
					<dd id="navlogo"><a href="/">
						<img src="../img/logo.svg" />
					</a></dd>
					<dd><a href="/#what">What is it?</a></dd>
					<dd><a href="/#download">Download</a></dd>
					<dd><a href="/#faqs">FAQs</a></dd>
					<dd class="active"><a href="/docs">Docs</a></dd>
				</dl>
			</div>
		<div id="content">
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>cpp3ds</b></li><li class="navelem"><a class="el" href="classcpp3ds_1_1SoundFileReader.htm">SoundFileReader</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classcpp3ds_1_1SoundFileReader-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cpp3ds::SoundFileReader Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__audio.htm">Audio module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Abstract base class for sound file decoding.  
 <a href="classcpp3ds_1_1SoundFileReader.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundFileReader_8hpp_source.htm">SoundFileReader.hpp</a>&gt;</code></p>

<p>Inherited by cpp3ds::priv::SoundFileReaderMp3, cpp3ds::priv::SoundFileReaderOgg, and cpp3ds::priv::SoundFileReaderWav.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcpp3ds_1_1SoundFileReader_1_1Info.htm">Info</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure holding the audio properties of a sound file.  <a href="structcpp3ds_1_1SoundFileReader_1_1Info.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1561b6a5bac1344a5490c43e5f88ef46"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileReader.htm#a1561b6a5bac1344a5490c43e5f88ef46">~SoundFileReader</a> ()</td></tr>
<tr class="memdesc:a1561b6a5bac1344a5490c43e5f88ef46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#a1561b6a5bac1344a5490c43e5f88ef46">More...</a><br /></td></tr>
<tr class="separator:a1561b6a5bac1344a5490c43e5f88ef46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ac14f109a497bb72cd6f8324f611ab8"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileReader.htm#a4ac14f109a497bb72cd6f8324f611ab8">open</a> (<a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;stream, <a class="el" href="structcpp3ds_1_1SoundFileReader_1_1Info.htm">Info</a> &amp;info)=0</td></tr>
<tr class="memdesc:a4ac14f109a497bb72cd6f8324f611ab8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a sound file for reading.  <a href="#a4ac14f109a497bb72cd6f8324f611ab8">More...</a><br /></td></tr>
<tr class="separator:a4ac14f109a497bb72cd6f8324f611ab8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dca75c09bdc6a540e36f4d9bf3b80e8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileReader.htm#a9dca75c09bdc6a540e36f4d9bf3b80e8">seek</a> (Uint64 sampleOffset)=0</td></tr>
<tr class="memdesc:a9dca75c09bdc6a540e36f4d9bf3b80e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the current read position to the given sample offset.  <a href="#a9dca75c09bdc6a540e36f4d9bf3b80e8">More...</a><br /></td></tr>
<tr class="separator:a9dca75c09bdc6a540e36f4d9bf3b80e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8f265778f4603e15aeb89cf183106fe"><td class="memItemLeft" align="right" valign="top">virtual Uint64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcpp3ds_1_1SoundFileReader.htm#ab8f265778f4603e15aeb89cf183106fe">read</a> (Int16 *samples, Uint64 maxCount)=0</td></tr>
<tr class="memdesc:ab8f265778f4603e15aeb89cf183106fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read audio samples from the open file.  <a href="#ab8f265778f4603e15aeb89cf183106fe">More...</a><br /></td></tr>
<tr class="separator:ab8f265778f4603e15aeb89cf183106fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Abstract base class for sound file decoding. </p>
<p>This class allows users to read audio file formats not natively supported by cpp3ds, and thus extend the set of supported readable audio formats.</p>
<p>A valid sound file reader must override the open, seek and write functions, as well as providing a static check function; the latter is used by cpp3ds to find a suitable writer for a given input file.</p>
<p>To register a new reader, use the <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm#a9a026687a9e229691a51c229f49a46e4" title="Register a new reader. ">cpp3ds::SoundFileFactory::registerReader</a> template function.</p>
<p>Usage example: </p><div class="fragment"><div class="line"><span class="keyword">class </span>MySoundFileReader : <span class="keyword">public</span> <a class="code" href="classcpp3ds_1_1SoundFileReader.htm">cpp3ds::SoundFileReader</a></div>
<div class="line">{</div>
<div class="line"><span class="keyword">public</span>:</div>
<div class="line"></div>
<div class="line">    <span class="keyword">static</span> <span class="keywordtype">bool</span> check(<a class="code" href="classcpp3ds_1_1InputStream.htm">cpp3ds::InputStream</a>&amp; stream)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// typically, read the first few header bytes and check fields that identify the format</span></div>
<div class="line">        <span class="comment">// return true if the reader can handle the format</span></div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classcpp3ds_1_1SoundFileReader.htm#a4ac14f109a497bb72cd6f8324f611ab8">open</a>(<a class="code" href="classcpp3ds_1_1InputStream.htm">cpp3ds::InputStream</a>&amp; stream, Info&amp; info)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// read the sound file header and fill the sound attributes</span></div>
<div class="line">        <span class="comment">// (channel count, sample count and sample rate)</span></div>
<div class="line">        <span class="comment">// return true on success</span></div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classcpp3ds_1_1SoundFileReader.htm#a9dca75c09bdc6a540e36f4d9bf3b80e8">seek</a>(cpp3ds::Uint64 sampleOffset)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// advance to the sampleOffset-th sample from the beginning of the sound</span></div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keyword">virtual</span> cpp3ds::Uint64 <a class="code" href="classcpp3ds_1_1SoundFileReader.htm#ab8f265778f4603e15aeb89cf183106fe">read</a>(cpp3ds::Int16* samples, cpp3ds::Uint64 maxCount)</div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// read up to &#39;maxCount&#39; samples into the &#39;samples&#39; array,</span></div>
<div class="line">        <span class="comment">// convert them (for example from normalized float) if they are not stored</span></div>
<div class="line">        <span class="comment">// as 16-bits signed integers in the file</span></div>
<div class="line">        <span class="comment">// return the actual number of samples read</span></div>
<div class="line">    }</div>
<div class="line">};</div>
<div class="line"></div>
<div class="line">cpp3ds::SoundFileFactory::registerReader&lt;MySoundFileReader&gt;();</div>
</div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcpp3ds_1_1InputSoundFile.htm" title="Provide read access to sound files. ">cpp3ds::InputSoundFile</a>, <a class="el" href="classcpp3ds_1_1SoundFileFactory.htm" title="Manages and instantiates sound file readers and writers. ">cpp3ds::SoundFileFactory</a>, <a class="el" href="classcpp3ds_1_1SoundFileWriter.htm" title="Abstract base class for sound file encoding. ">cpp3ds::SoundFileWriter</a> </dd></dl>

<p>Definition at line <a class="el" href="SoundFileReader_8hpp_source.htm#l00043">43</a> of file <a class="el" href="SoundFileReader_8hpp_source.htm">SoundFileReader.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1561b6a5bac1344a5490c43e5f88ef46"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual cpp3ds::SoundFileReader::~SoundFileReader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

<p>Definition at line <a class="el" href="SoundFileReader_8hpp_source.htm#l00062">62</a> of file <a class="el" href="SoundFileReader_8hpp_source.htm">SoundFileReader.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4ac14f109a497bb72cd6f8324f611ab8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool cpp3ds::SoundFileReader::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcpp3ds_1_1InputStream.htm">InputStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structcpp3ds_1_1SoundFileReader_1_1Info.htm">Info</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Open a sound file for reading. </p>
<p>The provided stream reference is valid as long as the <a class="el" href="classcpp3ds_1_1SoundFileReader.htm" title="Abstract base class for sound file decoding. ">SoundFileReader</a> is alive, so it is safe to use/store it during the whole lifetime of the reader.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Source stream to read from </td></tr>
    <tr><td class="paramname">info</td><td>Structure to fill with the properties of the loaded sound</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the file was successfully opened </dd></dl>

</div>
</div>
<a class="anchor" id="ab8f265778f4603e15aeb89cf183106fe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Uint64 cpp3ds::SoundFileReader::read </td>
          <td>(</td>
          <td class="paramtype">Int16 *&#160;</td>
          <td class="paramname"><em>samples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint64&#160;</td>
          <td class="paramname"><em>maxCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read audio samples from the open file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">samples</td><td>Pointer to the sample array to fill </td></tr>
    <tr><td class="paramname">maxCount</td><td>Maximum number of samples to read</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Number of samples actually read (may be less than <em>maxCount</em>) </dd></dl>

</div>
</div>
<a class="anchor" id="a9dca75c09bdc6a540e36f4d9bf3b80e8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void cpp3ds::SoundFileReader::seek </td>
          <td>(</td>
          <td class="paramtype">Uint64&#160;</td>
          <td class="paramname"><em>sampleOffset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the current read position to the given sample offset. </p>
<p>If the given offset exceeds to total number of samples, this function must jump to the end of the file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sampleOffset</td><td>Index of the sample to jump to, relative to the beginning </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundFileReader_8hpp_source.htm">SoundFileReader.hpp</a></li>
</ul>
</div><!-- contents -->
		</div>
		<div id="footer-container">
			<div id="footer">
				SFML Copyright &copy; Laurent Gomila
			</div>
		</div>
	</body>
</html>
